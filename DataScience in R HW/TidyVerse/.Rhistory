info=NULL
for(i in 1:length(names(data))){
num_of_uniquevalue=length(unique(data[,i]))
Na = sum(is.na(data[,i]))
Ze = sum(data[,i]==0,na.rm =T)
P_na = (Na+Ze)/length(data[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Number of 0','% of Missing Value')
colnames(info)=names(data)
kable(info,caption = "Quality of Data",align = "c",digits = 2,
booktabs=T,longtable=T) %>%
kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"))
knitr::opts_chunk$set(echo = TRUE)
library(VIM)
library(tidyverse)
data= read.csv("dataalt(1).csv",header = T)
matrixplot(data[,11:20])
info=NULL
for(i in 1:length(names(data))){
num_of_uniquevalue=length(unique(data[,i]))
Na = sum(is.na(data[,i]))
Ze = sum(data[,i]==0,na.rm =T)
P_na = (Na+Ze)/length(data[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Number of 0','% of Missing Value')
colnames(info)=names(data)
kable(info,caption = "Quality of Data",align = "c",digits = 2,
booktabs=T,longtable=T) %>%
kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"))
knitr::opts_chunk$set(echo = TRUE)
library(VIM)
library(tidyverse)
library(kableExtra)
data= read.csv("dataalt(1).csv",header = T)
matrixplot(data[,11:20])
info=NULL
for(i in 1:length(names(data))){
num_of_uniquevalue=length(unique(data[,i]))
Na = sum(is.na(data[,i]))
Ze = sum(data[,i]==0,na.rm =T)
P_na = (Na+Ze)/length(data[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Number of 0','% of Missing Value')
colnames(info)=names(data)
kable(info,caption = "Quality of Data",align = "c",digits = 2,
booktabs=T,longtable=T) %>%
kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"))
data= read.csv("dataalt(1).csv",header = T)
matrixplot(data[,11:20])
info=NULL
for(i in 1:length(names(data))){
num_of_uniquevalue=length(unique(data[,i]))
Na = sum(is.na(data[,i]))
Ze = sum(data[,i]==0,na.rm =T)
P_na = (Na+Ze)/length(data[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Number of 0','% of Missing Value')
colnames(info)=names(data)
kable(filter(info,'% of Missing Value'>0.5),caption = "Quality of Data",align = "c",digits = 2,
booktabs=T,longtable=T) %>%
kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"))
data= read.csv("dataalt(1).csv",header = T)
matrixplot(data[,11:20])
info=NULL
for(i in 1:length(names(data))){
num_of_uniquevalue=length(unique(data[,i]))
Na = sum(is.na(data[,i]))
Ze = sum(data[,i]==0,na.rm =T)
P_na = (Na+Ze)/length(data[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Numberof 0','%_of_Missing Value')
colnames(info)=names(data)
kable(filter(info,%_of_Missing_Value>0.5),caption = "Quality of Data",align = "c",digits = 2,
data= read.csv("dataalt(1).csv",header = T)
matrixplot(data[,11:20])
info=NULL
for(i in 1:length(names(data))){
num_of_uniquevalue=length(unique(data[,i]))
Na = sum(is.na(data[,i]))
Ze = sum(data[,i]==0,na.rm =T)
P_na = (Na+Ze)/length(data[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Numberof 0','%_of_Missing Value')
colnames(info)=names(data)
kable(filter(info,%_of_Missing_Value>0.5)),caption = "Quality of Data",align = "c",digits = 2,
data= read.csv("dataalt(1).csv",header = T)
matrixplot(data[,11:20])
info=NULL
for(i in 1:length(names(data))){
num_of_uniquevalue=length(unique(data[,i]))
Na = sum(is.na(data[,i]))
Ze = sum(data[,i]==0,na.rm =T)
P_na = (Na+Ze)/length(data[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Numberof 0','%_of_Missing Value')
colnames(info)=names(data)
kable(info,caption = "Quality of Data",align = "c",digits = 2,
booktabs=T,longtable=T) %>%
kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"))
summary(data)
kable(summary(data))
a=rnorm(10000)
b=exp(a)
car::qqPlot(b)
mean(b)
var(b)
x=rbinom(n = n,1,0.75)
n=100
x=rbinom(n = n,1,0.75)
x
x=rbinom(n = n,20,0.75)
hist(x)
the = rbeta(1,alpha,beta)
n=100 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 10
beta = 20
the = rbeta(1,alpha,beta)
theta = rbeta(1,alpha,beta)
x = rbinom(n,m,theta) # observations
x
# [ 1 ]
# y_i | theta ~ Po(x_i * theta), theta ~ Gamma(alpha, beta)
# Train example, as in lecture
x <- c(1, 2, 4)
y <- c(2, 4, 16)
alpha <- 1; beta <- 0 # "flat" prior
t_mode <- (alpha + sum(y) - 1) / (beta + sum(x))
t_var <- t_mode ^ 2 / (alpha + sum(y) - 1)
t <- seq(1, 6, length = 100)
plot(t, dgamma(t, alpha + sum(y), beta + sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, t_mode, sqrt(t_var)), lty = 2) # Laplace approx
abline(v = t_mode, lty = 3)
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
n=100 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 10
beta = 20
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
n=100 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(-5,5,0.01)
lines(t, dnorm(t, mod, sd), lty = 2)
lines(t, dnorm(t, mod, sd), lty = 2)
lines(t, dnorm(t, mod, sd), lty = 2)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
n=10 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(-5,5,0.01)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
n=5 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(-5,5,0.01)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(-5,5,0.01)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
n=5 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(0,2,0.01)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
n=5 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(0.5,1,0.001)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
n=5 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(0.6,0.95,0.0005)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
n=5 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(0.5,0.95,0.0005)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
n=100 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(0.5,0.95,0.0005)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
n=100 # sample size (# of experiment)
m=20  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(0.7,0.8,0.0005)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
n=100 # sample size (# of experiment)
m=5  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(0.7,0.8,0.0005)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
n=30 # sample size (# of experiment)
m=5  # number of trials in each experiment
alpha = 1
beta = 0
#theta = rbeta(1,alpha,beta)
x = rbinom(n,m,0.75) # observations
mod = (mean(x)+(alpha-1)/n)/(m+(alpha+beta-2)/n)
I.theta = (sum(x)+alpha-1)/(mod^2)+(m*n+beta-sum(x)-1)/((1-mod)^2)
sd = sqrt(1/I.theta)
t = seq(0.7,0.8,0.0005)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
t = seq(0.5,1,0.0005)
plot(t, dbeta(t, sum(x)+alpha, beta + m*n-sum(x)), type = "l",
xlab = expression(theta), ylab = "density")
lines(t, dnorm(t, mod, sd), lty = 2)
setwd("D:/R-connect-Server/DataScience in R HW/TidyVerse")
install.packages("gapminder")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load("tidyverse","knitr","kableExtra","gapminder")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load("tidyverse","knitr","kableExtra","gapminder")
da = gapminder
View(da)
q1 = da$country %>% unique %>% length
print(q1)
con_per = da %>% group_by(continent) %>% summarise( Num_of_contries = country %>% unique %>% length) %>% arrange(Num_of_contries , continent)
View(con_per)
kable(con_per, caption = "Number of countries included for each cintinents", align = "c", bookmark =T)
kable(con_per, caption = "Number of countries included for each cintinents", align = "c", booktab =T,)
mutate(da, total_gpa = pop*gdpPercap)
View(da)
View(da)
da %<>% mutate(total_gpa = pop*gdpPercap)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load("tidyverse","knitr","kableExtra","gapminder","magrittr")
da %<>% mutate(total_gpa = pop*gdpPercap)
View(da)
da = gapminder
View(da)
da %<>% mutate(total_GDP = pop*gdpPercap)
View(da)
da %>% filter(year == 1952) %>% group_by(continent) %>% summarise(tol_pop = sum(total_GDP)) %>% arrange(tol_pop,continent)
GDP1952 = da %>% filter(year == 1952) %>% group_by(continent) %>% summarise(tol_pop = sum(total_GDP)) %>% arrange(tol_pop,continent)
GDP = NULL
for (i in unique(da$year)) {
te = da %>% filter(year == i) %>% group_by(continent) %>% summarise(tol_pop = sum(total_GDP)) %>% arrange(tol_pop,continent)
GDP = cbind(GDP,te)
}
unique(da$year)
debugSource('D:/R-connect-Server/DataScience in R HW/TidyVerse/Debug File.R', echo=TRUE)
View(te)
GDP = data.frame(GDP)
GDP = NULL
GDP = data.frame(GDP)
for (i in unique(da$year)) {
te = da %>% filter(year == i) %>% group_by(continent) %>% summarise(tol_pop = sum(total_GDP)) %>% arrange(tol_pop,continent)
GDP %<>% mutate(i = te[,2])
}
debugSource('D:/R-connect-Server/DataScience in R HW/TidyVerse/Debug File.R', echo=TRUE)
debugSource('D:/R-connect-Server/DataScience in R HW/TidyVerse/Debug File.R', echo=TRUE)
View(GDP)
debugSource('D:/R-connect-Server/DataScience in R HW/TidyVerse/Debug File.R', echo=TRUE)
class(i)
debugSource('D:/R-connect-Server/DataScience in R HW/TidyVerse/Debug File.R', echo=TRUE)
View(da)
View(GDP)
te[,2]
debugSource('D:/R-connect-Server/DataScience in R HW/TidyVerse/Debug File.R', echo=TRUE)
debugSource('D:/R-connect-Server/DataScience in R HW/TidyVerse/Debug File.R', echo=TRUE)
toString(i)
debugSource('D:/R-connect-Server/DataScience in R HW/TidyVerse/Debug File.R', echo=TRUE)
View(te)
GDP = cbind(GDP,te)
dim(GDP) = c(5,1)
GDP = cbind(GDP,as.matrix(te))
as.matrix(te)
GDP = NULL
GDP = NULL
for (i in unique(da$year)) {
te = da %>% filter(year == i) %>% group_by(continent) %>% summarise(tol_pop = sum(total_GDP)) %>% arrange(tol_pop,continent)
GDP = cbind(GDP,as.matrix(te))
}
View(GDP)
te = da %>% filter(year == i) %>% group_by(continent) %>% summarise(tol_GDP = sum(total_GDP)) %>% arrange(tol_pop,continent)
te = da %>% filter(year == i) %>% group_by(continent) %>% summarise(tol_GDP = sum(total_GDP)) %>% arrange(tol_GDP,continent)
View(GDP)
for (i in unique(da$year)) {
for (i in unique(da$year)) {
for (i in unique(da$year)) {
for (i in unique(da$year)) {
for (i in unique(da$year)) {
for (i in unique(da$year)) {
for (i in unique(da$year)) {
GDP = NULL
for (i in unique(da$year)) {
te = da %>% filter(year == i) %>% group_by(continent) %>% summarise(tol_GDP = sum(total_GDP)) %>% arrange(tol_GDP,continent)
GDP = cbind(GDP,as.matrix(te))
}
View(GDP)
GDP = NULL
GDP = NULL
GDP = NULL
for (i in unique(da$year)) {
te = da %>% filter(year == i) %>% group_by(continent) %>% summarise(tol_GDP = sum(total_GDP)) %>% arrange(tol_GDP,continent)
GDP = cbind(GDP,as.matrix(te))
}
View(GDP)
unique(da$year)
GDP[1,2]
class(GDP[1,2])
View(da)
class(da$total_GDP)
da %<>% mutate(total_GDP = pop*gdpPercap/(10^10))
View(da)
da %<>% mutate(total_GDP = pop*gdpPercap/(10^9))
View(da)
da %<>% mutate(total_GDP = round(pop*gdpPercap/(10^9),2))
View(da)
GDP = NULL
for (i in unique(da$year)) {
te = da %>% filter(year == i) %>% group_by(continent) %>% summarise(tol_GDP = round(sum(total_GDP),2)) %>% arrange(tol_GDP,continent)
GDP = cbind(GDP,as.matrix(te))
}
kable(GDP[,1:8], caption = "Total GDP for each continents each year", align = "c", booktab =T, format = "latex",longtable = T) %>% kable_styling(latex_options = "hold_position") %>% add_header_above(c("1952"=2,"1957"=2,
"1962"=2,"1967"=2))
# "1972"=2,"1977"=2,
# "1982"=2,"1987"=2,
# "1992"=2,"1997"=2,
# "2002"=2,"2007"=2))
View(GDP)
knitr::opts_chunk$set(echo = F)
pacman::p_load("tidyverse","knitr","kableExtra","gapminder","magrittr")
da %>% pivot_wider(names_from = year, values_from = country)
da %>% pivot_wider(names_from = country, values_from = year)
da %>% pivot_wider(names_from = year, values_from = country)
da %>% unite("Continent_country",continent,country,sep = "_") %>% pivot_wider(names_from = year, values_from = Continent_country)
library(DSR)
library(DSR)
library(tidyr)
table2
spread(table2,key = type, value = count)
table2
spread(table2,key = type, value = count)
pivot_wider(table2,names_from = type, values_from = count)
spread(table2,type=key, count=value)
pivot_wider(table2,names_from = type, values_from = count)
table2
spread(table2,key = key, value = value)
da %>% filter(year == 1952) %>% group_by(continent) %>% summarise(Ave_GDP_Capita = mean(gdpPercap),
Max_GDP_Capita = max(gdpPercap),
Min_GDP_Capita = min(gdpPercap),
var_GDP_Capita = var(gdpPercap))
Summary_1952 = da %>% filter(year == 1952) %>% group_by(continent) %>% summarise(Ave_GDP_Capita = mean(gdpPercap),
Max_GDP_Capita = max(gdpPercap),
Min_GDP_Capita = min(gdpPercap),
var_GDP_Capita = var(gdpPercap))
Summary_2007 = da %>% filter(year == 2007) %>% group_by(continent) %>% summarise(Ave_GDP_Capita = mean(gdpPercap),
Max_GDP_Capita = max(gdpPercap),
Min_GDP_Capita = min(gdpPercap),
var_GDP_Capita = var(gdpPercap))
Summary = cbind(Summary_1952,Summary_2007)
View(Summary)
unique(country)
unique(da$country)
unique(da$country) %>% llength()
unique(da$country) %>% length
diff(da$pop)
diff(da$pop) %>% length
rbind(0,diff(da$pop))
t = rbind(0,diff(da$pop))
View(t)
t = cbind(0,diff(da$pop))
t = c(0,diff(da$pop))
t = c(0,diff(da$pop))
da$"Pop_growth"=c(0,diff(da$pop))
View(da)
da %>% group_by(country) %>% summarise(Pop_growth = diff(pop)) %>% filter(Pop_growth <0)
da %>% group_by(country) %>% summarise(Pop_growth = c(0,diff(pop))) %>% filter(Pop_growth <0)
da %>% group_by(country) %>% summarise(growth = c(0,diff(pop))) %>% filter(Pop_growth <0)
da %>% group_by(country) %>% apply(2,diff())
da %>% group_by(country) %>% apply(2,diff)
da %>% group_by(country)
da %>% group_by(country) %>% summarise(t = cumprod(diff(pop)))
da %>% group_by(country) %>% summarise(t = prod(diff(pop)))
da %>% group_by(country) %>% summarise(t = prod(diff(pop))<0)
da %>% group_by(country) %>% summarise(t = prod(diff(pop))<0) %>% filter(t)
neg_inc =  da %>% group_by(country) %>% summarise(t = prod(diff(pop))<0) %>% filter(t)
neg_inc =  da %>% group_by(country) %>% summarise(t = prod(diff(pop))<0) %>% filter(t)
neg_inc = cbind(neg_inc[1:10,],neg_inc[11:20,])
View(neg_inc)
neg_inc =  da %>% group_by(country) %>% summarise(t = prod(diff(pop))<0) %>% filter(t)
neg_inc = cbind(neg_inc[1:10,],neg_inc[11:20,])
neg_inc %<>% select(country)
View(neg_inc)
neg_inc =  da %>% group_by(country) %>% summarise(t = prod(diff(pop))<0) %>% filter(t)
neg_inc = cbind(neg_inc[1:10,],neg_inc[11:20,])
neg_inc %<>% mutate(t=NULL)
neg_inc =  da %>% group_by(country) %>% summarise(t = prod(diff(pop))<0) %>% filter(t) %>% arrange(country)
neg_inc = cbind(neg_inc[1:5,],neg_inc[6:10,],neg_inc[11:15,],neg_inc[16:20,])
kable(neg_inc[,c(1,3,5,7)], caption = "Countries had periods of negative population growth", align = "c", booktab =T, format = "latex") %>%
kable_styling(latex_options = c("HOLD_position"))
neg_inc =  da %>% group_by(country) %>% summarise(t = prod(diff(pop))<0) %>% filter(t) %>% arrange(country)
neg_inc = cbind(neg_inc[1:5,],neg_inc[6:10,],neg_inc[11:15,],neg_inc[16:20,])
colnames(neg_inc) = NULL
kable(neg_inc[,c(1,3,5,7)], caption = "Countries had periods of negative population growth", align = "c", booktab =T, format = "latex") %>%
kable_styling(latex_options = c("HOLD_position"))
neg_inc =  da %>% group_by(country) %>% summarise(t = prod(diff(pop))<0) %>% filter(t) %>% arrange(country)
neg_inc = cbind(neg_inc[1:5,],neg_inc[6:10,],neg_inc[11:15,],neg_inc[16:20,])
colnames(neg_inc) = NULL
kable(neg_inc[,c(1,3,5,7)], caption = "Countries had periods of negative population growth", align = "c", booktab =T) %>%
kable_styling(latex_options = c("HOLD_position"))
