for(N in 1:100){
if(((N-100)/100)%%0.01==0){
print((N-100)/100)
}
}
for(N in 1:100){
if(((N-1)/100)%%0.01==0){
print((N-1)/100)
}
}
library(MASS)
#Global Variables
#Run and define Global Variales first ! ! !
sigma=matrix(c(25,21,21,36),ncol = 2,byrow = T)
#Stimulation on increasing Sample Size to Check Convergency
ERR=NULL
ERR=NULL
l1=length(100:50000)
for(N in 100:50000){
#Generating independent variables according to bi-normal distribution with mean=10&50, covariance matrix = sigma.
indp=mvrnorm(n=N,c(10,50),sigma)
x=indp[,1]
z=indp[,1]
dim(x)=c(length(x),1)
dim(z)=c(length(z),1)
#Generating Dependent Variable, y = 20 + 5 * x + 0.3 * z + Standard Normal Residuals
y=rep(20,length(x))+5*x+0.3*z+rnorm(length(x),0,1)
#Construct OLS Regressors
X_OLS=cbind(rep(1,length(x)),x)
#Run OLS Regression
Beta_OLS=solve(t(X_OLS) %*% X_OLS) %*% t(X_OLS) %*% y
#Calcutate Error Between Real coefficient and regression result
ERR_OLS = cbind(ERR,Beta_OLS-c(20,5))
if(((N-100)/l1)%%0.01==0){
print((N-100)/l1)
}
}
#Global Variables
#Run and define Global Variales first ! ! !
sigma=matrix(c(25,21,21,36),ncol = 2,byrow = T)
library(MASS)
ERR=NULL
l1=length(100:50000)
for(N in 100:50000){
#Generating independent variables according to bi-normal distribution with mean=10&50, covariance matrix = sigma.
indp=mvrnorm(n=N,c(10,50),sigma)
x=indp[,1]
z=indp[,1]
dim(x)=c(length(x),1)
dim(z)=c(length(z),1)
#Generating Dependent Variable, y = 20 + 5 * x + 0.3 * z + Standard Normal Residuals
y=rep(20,length(x))+5*x+0.3*z+rnorm(length(x),0,1)
#Construct OLS Regressors
X_OLS=cbind(rep(1,length(x)),x)
#Run OLS Regression
Beta_OLS=solve(t(X_OLS) %*% X_OLS) %*% t(X_OLS) %*% y
#Calcutate Error Between Real coefficient and regression result
ERR_OLS = cbind(ERR,Beta_OLS-c(20,5))
print('Succeed')
if(((N-100)/l1)%%0.01==0){
print((N-100)/l1)
}
}
