predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$`I(arsenic^2)`),x,x^2,mean(reda $educ),mean(reda$assoc) ) %*% coef(mo2))
}
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
reda = data.frame(cbind(mo2$fitted.values,mo2$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.,x,x^2,mean(reda $educ),mean(reda$assoc) ) %*% coef(mo2))
}
reda = data.frame(cbind(mo2$fitted.values,mo2$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,x^2,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo2))
}
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
red = data.frame(cbind(mo2$residuals,mo2$fitted.values))
ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
View(red)
View(reda)
View(red)
red = data.frame(cbind(mo2$residuals,mo2$fitted.values),row.names = c('residuals','fitted.values'))
red = data.frame(cbind(mo2$residuals,mo2$fitted.values),col.names = c('residuals','fitted.values'))
ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
red = data.frame(cbind(mo2$residuals,mo2$fitted.values),col.names = c('residuals','fitted.values'))
#ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
red = data.frame(cbind(mo2$residuals,mo2$fitted.values),col.names = c('residuals','fitted.values'))
#ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
View(red)
red = data.frame(cbind(mo2$residuals,mo2$fitted.values))
colnames(red) = c('residuals','fitted.values')
ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
red = data.frame(cbind(mo2$residuals,mo2$fitted.values))
colnames(red) = c('residuals','fitted.values')
ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
binnedplot(fitted(mo2),resid(mo2,type="response"))
red = data.frame(cbind(mo2$residuals,mo2$fitted.values))
colnames(red) = c('residuals','fitted.values')
ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
binnedplot(fitted(mo2),resid(mo2,type="response"))
glm.prob = predict(mo2,type = 'response')
glm.pred=ifelse(glm.prob>0.5,"Yes","No")
table(glm.pred,dat$switch)
glm.prob = predict(mo2,type = 'response')
glm.pred=ifelse(glm.prob>0.5,"Yes","No")
kable(table(glm.pred,dat$switch))
glm.prob = predict(mo2,type = 'response')
glm.pred=ifelse(glm.prob>0.5,"Yes","No")
er = table(glm.pred,dat$switch)
kable(er,caption = "Error Table",align = "c",digits = 3,
format = 'latex',booktabs=T,longtable=T) %>%
kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"))
dat$dist[dat$dist<100]=0
dat$dist[dat$dist>=100 & dat$dist <200]=1
dat$dist[dat$dist>=200]=2
unique(dat$dist)
dat$dist[dat$dist<100]=0
dat$dist[dat$dist>=100 & dat$dist <200]=1
dat$dist[dat$dist>=200]=2
disc = dat %>% group_by(dist) %>% summarise(prob = sum(switch)/length(switch))
colnames(disc) = c('DIST_Categorical','Probability')
as = ggplot(data = data.frame(disc)) + geom_point(aes(y = Probability, x = DIST_Categorical),size = 10) + xlab("DIST_Categorical") + ylab("Probability of Switch")
dat$dist[dat$dist<100]=0
dat$dist[dat$dist>=100 & dat$dist <200]=1
dat$dist[dat$dist>=200]=2
disc = dat %>% group_by(dist) %>% summarise(prob = sum(switch)/length(switch))
colnames(disc) = c('DIST_Categorical','Probability')
as = ggplot(data = data.frame(disc)) + geom_point(aes(y = Probability, x = DIST_Categorical),size = 10) + xlab("DIST_Categorical") + ylab("Probability of Switch")
dat$dist[dat$dist<100]=0
dat$dist[dat$dist>=100 & dat$dist <200]=1
dat$dist[dat$dist>=200]=2
disc = dat %>% group_by(dist) %>% summarise(prob = sum(switch)/length(switch))
colnames(disc) = c('DIST_Categorical','Probability')
gplot(data = data.frame(disc)) + geom_point(aes(y = Probability, x = DIST_Categorical),size = 10) + xlab("DIST_Categorical") + ylab("Probability of Switch")
dat$dist[dat$dist<100]=0
dat$dist[dat$dist>=100 & dat$dist <200]=1
dat$dist[dat$dist>=200]=2
disc = dat %>% group_by(dist) %>% summarise(prob = sum(switch)/length(switch))
colnames(disc) = c('DIST_Categorical','Probability')
ggplot(data = data.frame(disc)) + geom_point(aes(y = Probability, x = DIST_Categorical),size = 10) + xlab("DIST_Categorical") + ylab("Probability of Switch")
View(disc)
View(dat)
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
wells_dt <- data.frame(read.table("http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat", header=TRUE))
dat = wells_dt
dat = mutate(dat,lg_dis = log(dist))
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.7))
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point()+ xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
mo2 = glm(data = dat, switch ~ arsenic+ I(arsenic^2) + lg_dis + I(lg_dis^2) + educ + assoc, family = binomial(link = "logit"))
summary(mo2)
reda = data.frame(cbind(mo2$fitted.values,mo2$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,x^2,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo2))
}
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
red = data.frame(cbind(mo2$residuals,mo2$fitted.values))
colnames(red) = c('residuals','fitted.values')
ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
binnedplot(fitted(mo2),resid(mo2,type="response"))
dat$dist_c[dat$dist<100]=0
dat$dist_c[dat$dist>=100 & dat$dist <200]=1
dat$dist_c[dat$dist>=200]=2
disc = dat %>% group_by(dist_c) %>% summarise(prob = sum(switch)/length(switch))
colnames(disc) = c('DIST_Categorical','Probability')
ggplot(data = data.frame(disc)) + geom_point(aes(y = Probability, x = DIST_Categorical),size = 10) + xlab("DIST_Categorical") + ylab("Probability of Switch")
mo3 = glm(data = dat, switch ~ arsenic+ I(arsenic^2) + dist_c + educ + assoc, family = binomial(link = "logit"))
summary(mo3)
reda2 = data.frame(cbind(mo3$fitted.values,mo3$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo3))
}
ggplot(reda2)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
View(reda2)
reda2 = data.frame(cbind(mo3$fitted.values,mo3$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo3))
}
ggplot(reda2)+aes(x=dist_c,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
reda2 = data.frame(cbind(mo3$fitted.values,mo3$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo3))
}
ggplot(reda2)+aes(x=dist_c,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
reda2 = data.frame(cbind(mo3$fitted.values,mo3$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo3))
}
ggplot(reda2)+aes(x=dist_c,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun) + theme(legend.position = 'top')
reda2 = data.frame(cbind(mo3$fitted.values,mo3$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo3))
}
ggplot(reda2)+aes(x=dist_c,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun) + theme(legend.position = 'bottom')
red2 = data.frame(cbind(mo3$residuals,mo3$fitted.values))
colnames(red2) = c('residuals','fitted.values')
ggplot(red2) + geom_point(aes(y = residuals, x = fitted.values))
binnedplot(fitted(mo3),resid(mo3,type="response"))
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
wells_dt <- data.frame(read.table("http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat", header=TRUE))
dat = wells_dt
dat = mutate(dat,lg_dis = log(dist))
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.7))
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point()+ xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
mo2 = glm(data = dat, switch ~ arsenic+ I(arsenic^2) + lg_dis + I(lg_dis^2) + educ + assoc, family = binomial(link = "logit"))
summary(mo2)
reda = data.frame(cbind(mo2$fitted.values,mo2$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,x^2,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo2))
}
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
red = data.frame(cbind(mo2$residuals,mo2$fitted.values))
colnames(red) = c('residuals','fitted.values')
ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
binnedplot(fitted(mo2),resid(mo2,type="response"))
glm.prob = predict(mo2,type = 'response')
glm.pred=ifelse(glm.prob>0.5,"Yes","No")
er = table(glm.pred,dat$switch)
kable(er,caption = "Error Table",align = "c",digits = 3,
format = 'latex',booktabs=T,longtable=T) %>%
kable_styling(bootstrap_options =
c('striped','hover','condensed',"responsive"))
dat$dist_c[dat$dist<100]=0
dat$dist_c[dat$dist>=100 & dat$dist <200]=1
dat$dist_c[dat$dist>=200]=2
disc = dat %>% group_by(dist_c) %>% summarise(prob = sum(switch)/length(switch))
colnames(disc) = c('DIST_Categorical','Probability')
ggplot(data = data.frame(disc)) + geom_point(aes(y = Probability, x = DIST_Categorical),size = 10) + xlab("DIST_Categorical") + ylab("Probability of Switch")
mo3 = glm(data = dat, switch ~ arsenic+ I(arsenic^2) + dist_c + educ + assoc, family = binomial(link = "logit"))
summary(mo3)
reda2 = data.frame(cbind(mo3$fitted.values,mo3$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo3))
}
ggplot(reda2)+aes(x=dist_c,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
red2 = data.frame(cbind(mo3$residuals,mo3$fitted.values))
colnames(red2) = c('residuals','fitted.values')
ggplot(red2) + geom_point(aes(y = residuals, x = fitted.values))
binnedplot(fitted(mo3),resid(mo3,type="response"))
glm.prob2 = predict(mo3,type = 'response')
glm.pred2=ifelse(glm.prob2>0.5,"Yes","No")
er2 = table(glm.pred2,dat$switch)
kable(er2,caption = "Error Table",align = "c",digits = 3,
format = 'latex',booktabs=T,longtable=T) %>%
kable_styling(bootstrap_options =
c('striped','hover','condensed',"responsive"))
View(dat)
mo4 = glm(data = dat, switch~dist+log(arsenic)+I(dist:log(arsenic)),family = binomial(link = 'logit'))
mo4 = glm(data = dat, switch~dist+log(arsenic)+I(dist:arsenic),family = binomial(link = 'logit'))
mo4 = glm(data = dat, switch~dist+log(arsenic)+dist:arsenic,family = binomial(link = 'logit'))
summary(mo4)
mo4 = glm(data = dat, switch~dist+log(arsenic)+dist:log(arsenic),family = binomial(link = 'logit'))
summary(mo4)
mo4 = glm(data = dat, switch~dist+log(arsenic)+dist:log(arsenic),family = binomial(link = 'logit'))
summary(mo4)
reda3 = data.frame(cbind(mo3$fitted.values,mo3$model))
predfun<- function(x){
invlogit (cbind (1,x,mean(reda3$),x,x^2,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo2))
View(reda3)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,x,mean(reda3$),x,x^2,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo2))
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
mo4 = glm(data = dat, switch~dist_c+log(arsenic)+dist:log(arsenic),family = binomial(link = 'logit'))
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
wells_dt <- data.frame(read.table("http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat", header=TRUE))
dat = wells_dt
dat = mutate(dat,lg_dis = log(dist))
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.7))
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point()+ xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
mo2 = glm(data = dat, switch ~ arsenic+ I(arsenic^2) + lg_dis + I(lg_dis^2) + educ + assoc, family = binomial(link = "logit"))
summary(mo2)
reda = data.frame(cbind(mo2$fitted.values,mo2$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,x^2,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo2))
}
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
red = data.frame(cbind(mo2$residuals,mo2$fitted.values))
colnames(red) = c('residuals','fitted.values')
ggplot(red) + geom_point(aes(y = residuals, x = fitted.values))
binnedplot(fitted(mo2),resid(mo2,type="response"))
glm.prob = predict(mo2,type = 'response')
glm.pred=ifelse(glm.prob>0.5,"Yes","No")
er = table(glm.pred,dat$switch)
kable(er,caption = "Error Table",align = "c",digits = 3,
format = 'latex',booktabs=T,longtable=T) %>%
kable_styling(bootstrap_options =
c('striped','hover','condensed',"responsive"))
dat$dist_c[dat$dist<100]=0
dat$dist_c[dat$dist>=100 & dat$dist <200]=1
dat$dist_c[dat$dist>=200]=2
disc = dat %>% group_by(dist_c) %>% summarise(prob = sum(switch)/length(switch))
colnames(disc) = c('DIST_Categorical','Probability')
ggplot(data = data.frame(disc)) + geom_point(aes(y = Probability, x = DIST_Categorical),size = 10) + xlab("DIST_Categorical") + ylab("Probability of Switch")
mo3 = glm(data = dat, switch ~ arsenic+ I(arsenic^2) + dist_c + educ + assoc, family = binomial(link = "logit"))
summary(mo3)
reda2 = data.frame(cbind(mo3$fitted.values,mo3$model))
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$I.arsenic.2.),x,mean(reda$educ),mean(reda$assoc) ) %*% coef(mo3))
}
ggplot(reda2)+aes(x=dist_c,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
red2 = data.frame(cbind(mo3$residuals,mo3$fitted.values))
colnames(red2) = c('residuals','fitted.values')
ggplot(red2) + geom_point(aes(y = residuals, x = fitted.values))
binnedplot(fitted(mo3),resid(mo3,type="response"))
glm.prob2 = predict(mo3,type = 'response')
glm.pred2=ifelse(glm.prob2>0.5,"Yes","No")
er2 = table(glm.pred2,dat$switch)
kable(er2,caption = "Error Table",align = "c",digits = 3,
format = 'latex',booktabs=T,longtable=T) %>%
kable_styling(bootstrap_options =
c('striped','hover','condensed',"responsive"))
mo4 = glm(data = dat, switch~dist_c+log(arsenic)+dist:log(arsenic),family = binomial(link = 'logit'))
summary(mo4)
mo4 = glm(data = dat, switch~dist_c+log(arsenic)+dist:log(arsenic),family = binomial(link = 'logit'))
summary(mo4)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,x,mean(reda3$log.arsenic.),x*mean(reda3$log.arsenic.)) %*% coef(mo4))
}
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
View(reda3)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,seq(0,2,1),x,seq(0,2,1)*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
predfun(1)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,seq(0,2,1),x,seq(0,2,1)*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,0,x,0*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,1,x,1*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,2,x,2*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,2,x,2*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun,aes(color = "asd"))
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,2,x,2*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun,aes(color = "asd"),size = 5)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,2,x,2*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun,color = 'red',size =3)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun<- function(x){
invlogit (cbind (1,2,x,2*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun,color = 'red',size =1.5)
reda3 = data.frame(cbind(mo4$fitted.values,mo4$model))
predfun0<- function(x){
invlogit (cbind (1,0,x,0*x) %*% coef(mo4))
}
predfun1<- function(x){
invlogit (cbind (1,1,x,1*x) %*% coef(mo4))
}
predfun2<- function(x){
invlogit (cbind (1,2,x,2*x) %*% coef(mo4))
}
ggplot(dat)+aes(x=arsenic,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun0,aes(color = 'dis_c=0'),size =1.5) + stat_function(fun = predfun1,aes(color = 'dis_c=1'),size =1.5)+ stat_function(fun = predfun2,aes(color = 'dis_c=2'),size =1.5)
mo4 = glm(data = dat, switch~dist_c+log(arsenic)+dist:log(arsenic),family = binomial(link = 'logit'))
summary(mo4)
hi = 1
low = 0
b = mo4$coefficients
hi_p = invlogit(b[1] + b[2]*hi + b[3]* mo4$model$`log(arsenic)` + b[4]*mo4$model$`log(arsenic)`*hi)
hi_p
hi = 1
low = 0
b = mo4$coefficients
hi_p = invlogit(b[1] + b[2]*hi + b[3]* mo4$model$`log(arsenic)` + b[4]*mo4$model$`log(arsenic)`*hi)
low_p = invlogit(b[1] + b[2]*low + b[3]* mo4$model$`log(arsenic)` + b[4]*mo4$model$`log(arsenic)`*low)
mean(hi_p - low_p)
hi = 2
low = 1
b = mo4$coefficients
hi_p = invlogit(b[1] + b[2]*hi + b[3]* mo4$model$`log(arsenic)` + b[4]*mo4$model$`log(arsenic)`*hi)
low_p = invlogit(b[1] + b[2]*low + b[3]* mo4$model$`log(arsenic)` + b[4]*mo4$model$`log(arsenic)`*low)
mean(hi_p - low_p)
hi = 1
low = 0.5
b = mo4$coefficients
hi_p = invlogit(b[1] + b[2]*mo4$model$dist_c + b[3]*hi + b[4]*hi*mo4$model$dist_c)
low_p = invlogit(b[1] + b[2]*mo4$model$dist_c + b[3]*low + b[4]*low*mo4$model$dist_c)
mean(hi_p - low_p)
hi = 2
low = 1
b = mo4$coefficients
hi_p = invlogit(b[1] + b[2]*mo4$model$dist_c + b[3]*hi + b[4]*hi*mo4$model$dist_c)
low_p = invlogit(b[1] + b[2]*mo4$model$dist_c + b[3]*low + b[4]*low*mo4$model$dist_c)
mean(hi_p - low_p)
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
hi = 2
low = 1
b = mo4$coefficients
hi_p = invlogit(b[1] + b[2]*hi + b[3]* mo4$model$`log(arsenic)` +
b[4]*mo4$model$`log(arsenic)`*hi)
low_p = invlogit(b[1] + b[2]*low + b[3]* mo4$model$`log(arsenic)` +
b[4]*mo4$model$`log(arsenic)`*low)
mean(hi_p - low_p)
hi = 1
low = 0.5
b = mo4$coefficients
hi_p = invlogit(b[1] + b[2]*mo4$model$dist_c + b[3]*hi + b[4]*hi*mo4$model$dist_c)
low_p = invlogit(b[1] + b[2]*mo4$model$dist_c + b[3]*low + b[4]*low*mo4$model$dist_c)
mean(hi_p - low_p)
hi = 2
low = 1
b = mo4$coefficients
hi_p = invlogit(b[1] + b[2]*mo4$model$dist_c + b[3]*hi + b[4]*hi*mo4$model$dist_c)
low_p = invlogit(b[1] + b[2]*mo4$model$dist_c + b[3]*low + b[4]*low*mo4$model$dist_c)
mean(hi_p - low_p)
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
apt.subset.data <- read.table ("http://www.stat.columbia.edu/~gelman/arm/examples/rodents/apt.subset.dat", header=TRUE)
apt_dt <- data.frame(apt.subset.data)
setnames(apt_dt, colnames(apt_dt),c("y","defects","poor","race","floor","dist","bldg")
)
apt.subset.data <- read.table ("http://www.stat.columbia.edu/~gelman/arm/examples/rodents/apt.subset.dat", header=TRUE)
apt_dt <- data.frame(apt.subset.data)
data.table::setnames(apt_dt, colnames(apt_dt),c("y","defects","poor","race","floor","dist","bldg")
)
# invisible(apt_dt[,asian := race==5 | race==6 | race==7])
# invisible(apt_dt[,black := race==2])
# invisible(apt_dt[,hisp  := race==3 | race==4])
View(apt_dt)
invisible(apt_dt[,asian := race==5 | race==6 | race==7])
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra","data.table")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
apt.subset.data <- read.table ("http://www.stat.columbia.edu/~gelman/arm/examples/rodents/apt.subset.dat", header=TRUE)
apt_dt <- data.frame(apt.subset.data)
data.table::setnames(apt_dt, colnames(apt_dt),c("y","defects","poor","race","floor","dist","bldg")
)
invisible(apt_dt[,asian := race==5 | race==6 | race==7])
apt.subset.data <- read.table ("http://www.stat.columbia.edu/~gelman/arm/examples/rodents/apt.subset.dat", header=TRUE)
apt_dt <- data.table(apt.subset.data)
data.table::setnames(apt_dt, colnames(apt_dt),c("y","defects","poor","race","floor","dist","bldg")
)
invisible(apt_dt[,asian := race==5 | race==6 | race==7])
invisible(apt_dt[,black := race==2])
invisible(apt_dt[,hisp  := race==3 | race==4])
View(apt_dt)
apt_dt[,which(apt_dt$asian)]
which(apt_dt$asian)
apt_dt[which(apt_dt$asian),]
apt_dt[which(apt_dt$asian),]
unique(apt_dt[which(apt_dt$asian),]$race)
unique(apt_dt$race)
apt_dt[,asian := race==5 | race==6 | race==7]
View(apt.subset.data)
View(apt.subset.data)
View(apt_dt)
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
apt_dt$asian[apt_dt$asian==T]=1
apt_dt$asian[apt_dt$asian==F]=0
View(apt_dt)
apt.subset.data <- read.table ("http://www.stat.columbia.edu/~gelman/arm/examples/rodents/apt.subset.dat", header=TRUE)
apt_dt <- data.table(apt.subset.data)
data.table::setnames(apt_dt, colnames(apt_dt),c("y","defects","poor","race","floor","dist","bldg")
)
invisible(apt_dt[,asian := race==5 | race==6 | race==7])
invisible(apt_dt[,black := race==2])
invisible(apt_dt[,hisp  := race==3 | race==4])
apt_dt$asian[apt_dt$asian==T]=1
apt_dt$asian[apt_dt$asian==F]=0
apt_dt$black[apt_dt$black==T]=1
apt_dt$black[apt_dt$black==F]=0
apt_dt$hisp[apt_dt$hisp==T]=1
apt_dt$hisp[apt_dt$hisp==F]=0
View(apt_dt)
apt.subset.data <- read.table ("http://www.stat.columbia.edu/~gelman/arm/examples/rodents/apt.subset.dat", header=TRUE)
apt_dt <- data.table(apt.subset.data)
data.table::setnames(apt_dt, colnames(apt_dt),c("y","defects","poor","race","floor","dist","bldg")
)
invisible(apt_dt[,asian := race==5 | race==6 | race==7])
invisible(apt_dt[,black := race==2])
invisible(apt_dt[,hisp  := race==3 | race==4])
apt_dt$race[apt_dt$asian==T]=2
apt_dt$race[apt_dt$black==T]=3
apt_dt$race[apt_dt$hisp==T]=4
View(apt_dt)
unique(apt_dt$dist)
moo = glm(data=apt_dt, y~factor(race)+defects+poor+floor+dist+bldg,family = binomial(link = "logit"))
summary(moo)
moo = glm(data=apt_dt, y~factor(race)+defects+poor,family = binomial(link = "logit"))
summary(moo)
moo = glm(data=apt_dt, y~factor(race),family = binomial(link = "logit"))
summary(moo)
mooo = glm(data=apt_dt, y~factor(race)+defects+poor+floor+dest+bldg,family = binomial(link = "logit"))
mooo = glm(data=apt_dt, y~factor(race)+defects+poor+floor+dist+bldg,family = binomial(link = "logit"))
summary(mooo)
mooo = glm(data=apt_dt, y~factor(race)+defects+poor,family = binomial(link = "logit"))
summary(mooo)
mooo = glm(data=apt_dt, y~factor(race)+dist+bldg,family = binomial(link = "logit"))
summary(mooo)
mooo = glm(data=apt_dt, y~factor(race)+defects+dist+bldg,family = binomial(link = "logit"))
summary(mooo)
