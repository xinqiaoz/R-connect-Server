#ic = rbind(ic,"")
oc = da[,c('pre_vote','r_occup')]
oc %<>% group_by(r_occup) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
oc= cbind(ge,"occupation")
rl = da[,c('pre_vote','religion')]
rl %<>% group_by(religion) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
rl= cbind(ge,"religion")
#rl = rbind(rl,"",'')
colnames(ge) = c('Code','Portion',"variables")
colnames(ra) = c('Code','Portion',"variables")
colnames(ed) = c('Code','Portion',"variables")
colnames(ur) = c('Code','Portion',"variables")
colnames(re) = c('Code','Portion',"variables")
colnames(ic) = c('Code','Portion',"variables")
colnames(oc) = c('Code','Portion',"variables")
colnames(rl) = c('Code','Portion',"variables")
# rrr = rbind(re,ic,oc,rl)
# rrrr = rbind(ge,ra,ed,ur)
rr= rbind(ge,ra,ed,ur,re,ic,oc,rl)
View(ed)
ge = da[,c('pre_vote','gender')]
ge %<>% group_by(gender) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ge= cbind(ra,"gender")
# ge = rbind(ge,"",'','','')
ra = da[,c('pre_vote','race')]
ra %<>% group_by(race) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ra= cbind(ra,"race")
#ra = rbind(ra,"")
ed = da[,c('pre_vote','r_education')]
ed %<>% group_by(r_education) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ed= cbind(ed,"education")
#ed = rbind(ed,"",'')
ur = da[,c('pre_vote','urban')]
ur %<>% group_by(urban) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ur= cbind(ur,"urban")
#ur = rbind(ur,"",'','')
re = da[,c('pre_vote','region')]
re %<>% group_by(region) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
re= cbind(re,"region")
#re = rbind(re,"",'')
ic = da[,c('pre_vote','income_level')]
ic %<>% group_by(income_level) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ic= cbind(ic,"income")
#ic = rbind(ic,"")
oc = da[,c('pre_vote','r_occup')]
oc %<>% group_by(r_occup) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
oc= cbind(oc,"occupation")
rl = da[,c('pre_vote','religion')]
rl %<>% group_by(religion) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
rl= cbind(rl,"religion")
#rl = rbind(rl,"",'')
colnames(ge) = c('Code','Portion',"variables")
colnames(ra) = c('Code','Portion',"variables")
colnames(ed) = c('Code','Portion',"variables")
colnames(ur) = c('Code','Portion',"variables")
colnames(re) = c('Code','Portion',"variables")
colnames(ic) = c('Code','Portion',"variables")
colnames(oc) = c('Code','Portion',"variables")
colnames(rl) = c('Code','Portion',"variables")
# rrr = rbind(re,ic,oc,rl)
# rrrr = rbind(ge,ra,ed,ur)
rr= rbind(ge,ra,ed,ur,re,ic,oc,rl)
View(ed)
View(ge)
ge = da[,c('pre_vote','gender')]
ge %<>% group_by(gender) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ge= cbind(ge,"gender")
# ge = rbind(ge,"",'','','')
ra = da[,c('pre_vote','race')]
ra %<>% group_by(race) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ra= cbind(ra,"race")
#ra = rbind(ra,"")
ed = da[,c('pre_vote','r_education')]
ed %<>% group_by(r_education) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ed= cbind(ed,"education")
#ed = rbind(ed,"",'')
ur = da[,c('pre_vote','urban')]
ur %<>% group_by(urban) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ur= cbind(ur,"urban")
#ur = rbind(ur,"",'','')
re = da[,c('pre_vote','region')]
re %<>% group_by(region) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
re= cbind(re,"region")
#re = rbind(re,"",'')
ic = da[,c('pre_vote','income_level')]
ic %<>% group_by(income_level) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ic= cbind(ic,"income")
#ic = rbind(ic,"")
oc = da[,c('pre_vote','r_occup')]
oc %<>% group_by(r_occup) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
oc= cbind(oc,"occupation")
rl = da[,c('pre_vote','religion')]
rl %<>% group_by(religion) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
rl= cbind(rl,"religion")
#rl = rbind(rl,"",'')
colnames(ge) = c('Code','Portion',"variables")
colnames(ra) = c('Code','Portion',"variables")
colnames(ed) = c('Code','Portion',"variables")
colnames(ur) = c('Code','Portion',"variables")
colnames(re) = c('Code','Portion',"variables")
colnames(ic) = c('Code','Portion',"variables")
colnames(oc) = c('Code','Portion',"variables")
colnames(rl) = c('Code','Portion',"variables")
# rrr = rbind(re,ic,oc,rl)
# rrrr = rbind(ge,ra,ed,ur)
rr= rbind(ge,ra,ed,ur,re,ic,oc,rl)
# kable(rrr,caption = "portion of voting republican",align = "c",digits = 2,
#       format = 'latex',booktabs=T,longtable=T) %>%
#   kable_styling(bootstrap_options =
#                   c('striped','hover','condensed',"responsive"),latex_options = 'hold_position')
# kable(rrrr,caption = "portion of voting republican",align = "c",digits = 2,
#       format = 'latex',booktabs=T,longtable=T) %>%
#   kable_styling(bootstrap_options =
#                   c('striped','hover','condensed',"responsive"),latex_options = 'hold_position')
View(rr)
esquisser(rr)
esquisser(rr)
ge = da[,c('pre_vote','gender')]
ge %<>% group_by(gender) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ge= cbind(ge,"gender")
# ge = rbind(ge,"",'','','')
ra = da[,c('pre_vote','race')]
ra %<>% group_by(race) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ra= cbind(ra,"race")
#ra = rbind(ra,"")
ed = da[,c('pre_vote','r_education')]
ed %<>% group_by(r_education) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ed= cbind(ed,"education")
#ed = rbind(ed,"",'')
ur = da[,c('pre_vote','urban')]
ur %<>% group_by(urban) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ur= cbind(ur,"urban")
#ur = rbind(ur,"",'','')
re = da[,c('pre_vote','region')]
re %<>% group_by(region) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
re= cbind(re,"region")
#re = rbind(re,"",'')
ic = da[,c('pre_vote','income_level')]
ic %<>% group_by(income_level) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
ic= cbind(ic,"income")
#ic = rbind(ic,"")
oc = da[,c('pre_vote','r_occup')]
oc %<>% group_by(r_occup) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
oc= cbind(oc,"occupation")
rl = da[,c('pre_vote','religion')]
rl %<>% group_by(religion) %>% summarise(prob = round(sum(pre_vote==1)/length(pre_vote),2))
rl= cbind(rl,"religion")
#rl = rbind(rl,"",'')
colnames(ge) = c('Code','Portion',"variables")
colnames(ra) = c('Code','Portion',"variables")
colnames(ed) = c('Code','Portion',"variables")
colnames(ur) = c('Code','Portion',"variables")
colnames(re) = c('Code','Portion',"variables")
colnames(ic) = c('Code','Portion',"variables")
colnames(oc) = c('Code','Portion',"variables")
colnames(rl) = c('Code','Portion',"variables")
# # rrr = rbind(re,ic,oc,rl)
# # rrrr = rbind(ge,ra,ed,ur)
rr= rbind(ge,ra,ed,ur,re,ic,oc,rl)
# kable(rrr,caption = "portion of voting republican",align = "c",digits = 2,
#       format = 'latex',booktabs=T,longtable=T) %>%
#   kable_styling(bootstrap_options =
#                   c('striped','hover','condensed',"responsive"),latex_options = 'hold_position')
# kable(rrrr,caption = "portion of voting republican",align = "c",digits = 2,
#       format = 'latex',booktabs=T,longtable=T) %>%
#   kable_styling(bootstrap_options =
#                   c('striped','hover','condensed',"responsive"),latex_options = 'hold_position')
ggplot(rr) +
aes(x = Code, y = Portion) +
geom_line(size = 1L, colour = "#0c4c8a") +
theme_minimal() +
facet_wrap(vars(variables), scales = "free_x") +xlab('Variables') + ylab('Probability of voting Republican')
mo1 = glm(data = da, pre_vote ~ gender+race+r_education+urban+region+income_level+r_occup+religion)
mo1 = glm(data = da, pre_vote ~ gender+race+r_education+urban+region+income_level+r_occup+religion)
summary(mo1)
mo1 = glm(data = da, pre_vote ~ gender+race+r_education+urban+region+income_level+r_occup+religion,family = binomial(link = 'logit'))
summary(mo1)
mo1 = glm(data = da, pre_vote ~ gender+factor(race)+r_education+urban+region+income_level+r_occup+religion,family = binomial(link = 'logit'))
summary(mo1)
mo1 = glm(data = da, pre_vote ~ gender+factor(race)+factor(r_education)+factor(urban)+factor(region)+factor(income_level)+factor(r_occup)+factor(religion),family = binomial(link = 'logit'))
summary(mo1)
plot(mo1$residuals)
plot(mo1$residuals < 5)
car::qqPlot(mo1$residuals,id = F)
plot(mo1$residuals)
plot(mo1$residuals)
ggplot(aes(y=mo1$residuals,x = mo1$fitted.values)) + geom_point()
dat = data.frame(cbind(mo1$residuals,mo1$fitted.values))
ggplot(data = dat,aes(y=mo1$residuals,x = mo1$fitted.values)) + geom_point()
dat = data.frame(cbind(mo1$residuals,mo1$fitted.values))
ggplot(data = dat,aes(y=mo1$residuals,x = mo1$fitted.values)) + geom_point()
plot(x = mo1$fitted.values,y = mo1$residuals)
dat = data.frame(cbind(mo1$residuals,mo1$fitted.values))
ggplot(data = dat,aes(y=mo1$residuals,x = mo1$fitted.values)) + geom_point()
binnedplot(fitted(mo1),resid(mo1,type="response"))
mo1 = glm(data = da, pre_vote ~ gender+factor(race)+factor(r_education)+factor(urban)+factor(region)+factor(income_level)+factor(r_occup)+factor(religion)+factor(f_educ)+factor(m_educ)+factor(martial)+factor(par_id_3)+factor(dather_party)+factor(mother_party),family = binomial(link = 'logit'))
mo1 = glm(data = da, pre_vote ~ gender+factor(race)+factor(r_education)+factor(urban)+factor(region)+factor(income_level)+factor(r_occup)+factor(religion)+factor(f_educ)+factor(m_educ)+factor(martial)+factor(par_id_3)+factor(father_party)+factor(mother_party),family = binomial(link = 'logit'))
summary(mo1)
binnedplot(fitted(mo1),resid(mo1,type="response"))
mo1 = glm(data = da, pre_vote ~ gender+factor(race)+factor(r_education)+factor(urban)+factor(region)+factor(income_level)+factor(r_occup)+factor(religion)+factor(martial)+factor(par_id_3)+factor(father_party)+factor(mother_party),family = binomial(link = 'logit'))
summary(mo1)
binnedplot(fitted(mo1),resid(mo1,type="response"))
mo1 = glm(data = da, pre_vote ~ age+gender+factor(race)+factor(r_education)+factor(urban)+factor(region)+factor(income_level)+factor(r_occup)+factor(religion)+factor(martial)+factor(par_id_3)+factor(father_party)+factor(mother_party),family = binomial(link = 'logit'))
summary(mo1)
binnedplot(fitted(mo1),resid(mo1,type="response"))
knitr::opts_chunk$set(echo = FALSE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,warning = F)
pacman::p_load("tidyverse","knitr","arm","foreign","car","Cairo","kableExtra")
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
wells <- read.table("http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat", header=TRUE)
wells_dt <- data.table(wells)
wells <- read.table("http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat", header=TRUE)
wells_dt <- data.frame(wells)
wells <- read.table("http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat", header=TRUE)
wells_dt <- data.frame(wells)
wells_dt <- data.frame(read.table("http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat", header=TRUE))
wells_dt <- data.frame(read.table("http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat", header=TRUE))
View(wells_dt)
dat = wells_dt
dat = mutate(dat,lg_dis = log(dist))
View(dat)
dat arrange(dat,lg_dis)
dat = arrange(dat,lg_dis)
dat = arrange(dat,lg_dis)
for (i in length(dat$switch)) {
dat[i,7] = sum(dat[1:i,1])/i
}
data.frame(
dat[1:i,1
dat = arrange(dat,lg_dis)
for (i in 1:length(dat$switch)) {
dat[i,7] = sum(dat[1:i,1])/i
}
dat = arrange(dat,lg_dis)
for (i in 1:length(dat$switch)) {
dat[i,7] = sum(dat[1:i,1])/i
}
plot(y = dat$V7,x = dat$lg_dis)
as.factor(dat$lg_dis,ordered = T)
round(dat$lg_dis,digits = 2)
round(dat$lg_dis,digits = 1)
dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1),ordered = T))
dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1)))
dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
plot(diss)
View(diss)
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
ggplot(data = data.frame(diss)) + geom_point(aes(y = Probability, x = Log_Dis))
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
ggplot(data = data.frame(diss)) + geom_point(aes(y = Probability, x = Log_Dis)) + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks=NULL)
esquisser(diss)
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
ggplot(data = data.frame(diss)) + geom_point(aes(y = Probability, x = Log_Dis)) + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5))
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
View(edu)
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ggplot(data = data.frame(edu)) + geom_line(aes(y = prob,x = educ))
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ggplot(data = data.frame(edu)) + geom_line(aes(y = prob,x = educ)) + scale_x_discrete(breaks = seq(0,17,2))
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ggplot(data = data.frame(edu)) + geom_line(aes(y = prob,x = educ)) + scale_x_discrete(breaks = seq(0,17,2))
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ggplot(data = data.frame(edu)) + geom_line(aes(y = prob,x = educ))
esquisser(dat)
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
View(ars)
ggplot(data = data.frame(ars)) + geom_point(aes(y = Probability, x = Arsenic)) + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
View(ass)
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_bar(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")
esquisser(dat)
ggplot(data = dat,aes(x=switch, fill = assoc)) + geom_bar()
ggplot(data = dat,aes(x=switch, fill = assoc)) + geom_col()
ggplot(data = dat,aes(x=switch, y = assoc)) + geom_col()
ggplot(data = dat,aes(y=switch, x = assoc)) + geom_col()
ggplot(data = dat,aes(fill=assoc, x = switch)) + geom_histogram()
ggplot(data = dat,aes(color=assoc, x = switch)) + geom_histogram()
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + ggeom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")+scale_x_discrete(breaks = c(0,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")+scale_x_discrete(breaks = seq(0,1,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")+scale_x_discrete(limits = c('0','1'))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")+scale_x_discrete(breaks = facror(dat$assoc,ordered = T))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")+scale_x_discrete(breaks = factor(dat$assoc,ordered = T))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")
View(ass)
esquisser(ass)
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch") + scale_y_discrete(limits = c(0,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch") + scale_y_discrete(breaks = seq(0.4,0.6,0.05))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch") + scale_y_discrete(limits = seq(0.4,0.6,0.05))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch") + scale_y_continuous(breaks = seq(0.4,0.6,0.05))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc)) + xlab("Assoc") + ylab("Probability of Switch")
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 20) + xlab("Assoc") + ylab("Probability of Switch")
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss)) + geom_point(aes(y = Probability, x = Log_Dis)) + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5)) + geom_smooth()
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu)) + geom_point(aes(y = prob,x = educ)) + geom_smooth()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars)) + geom_point(aes(y = Probability, x = Arsenic)) + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1)) + geom_smooth()
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
ed
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5)) + geom_smooth()
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point() + geom_smooth()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point() + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1)) + geom_smooth()
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5)) + geom_smooth()
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point() + geom_smooth()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point() + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1)) + geom_smooth()
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5)) + geom_smooth()
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5)) + geom_smooth()
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point() + geom_smooth()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point() + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1)) + geom_smooth()
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
dat = wells_dt
dat = mutate(dat,lg_dis = log(dist))
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5)) + geom_smooth()
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point() + geom_smooth()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point() + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1)) + geom_smooth()
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5)) + geom_smooth()
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point() + geom_smooth()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point() + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1)) + geom_smooth(aes(y = Probability, x = Arsenic))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point() + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1)) + geom_smooth()
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5)) + geom_smooth()
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point() + geom_smooth()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point() + geom_smooth() + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5)) + geom_smooth()
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point() + geom_smooth()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point() + geom_smooth() + xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5))
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point()+ xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
diss = dat %>% group_by(as.factor(x = round(dat$lg_dis,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Log_Dis','Probability')
di = ggplot(data = data.frame(diss),aes(y = Probability, x = Log_Dis)) + geom_point() + xlab("Log Distance") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(-0.9,5.8,0.5))
edu = dat %>% group_by(educ) %>% summarise(prob = sum(switch)/length(switch))
colnames(diss) = c('Edu','Probability')
ed = ggplot(data = data.frame(edu),aes(y = prob,x = educ)) + geom_point()
ars = dat %>% group_by(as.factor(x = round(dat$arsenic,digits = 1))) %>% summarise(prob = sum(switch)/length(switch))
colnames(ars) = c('Arsenic','Probability')
ar = ggplot(data = data.frame(ars),aes(y = Probability, x = Arsenic)) + geom_point()+ xlab("Arsenic") + ylab("Probability of Switch") + scale_x_discrete(breaks = seq(0.5,9.7,1))
ass = dat %>% group_by(assoc) %>% summarise(prob = sum(switch)/length(switch))
colnames(ass) = c('Assoc','Probability')
as = ggplot(data = data.frame(ass)) + geom_point(aes(y = Probability, x = Assoc),size = 10) + xlab("Assoc") + ylab("Probability of Switch")
gridExtra::grid.arrange(di,ed,ar,as,ncol=2)
mo2 = glm(data = dat, switch ~ arsenic + lg_dis + I(lg_dis^2) + educ + assoc, family = binomial(link = "logit"))
mo2 = glm(data = dat, switch ~ arsenic + lg_dis + I(lg_dis^2) + educ + assoc, family = binomial(link = "logit"))
summary(mo2)
mo2 = glm(data = dat, switch ~ arsenic+ I(arsenic^2) + lg_dis + I(lg_dis^2) + educ + assoc, family = binomial(link = "logit"))
summary(mo2)
mo2$R
mo2$model
mo2$model
mo2$fitted.values
reda = cbind(mo2$fitted.values,mo2$model)
View(reda)
ggplot(reda)+aes(x=lg_dis,y=reda$`mo2$fitted.values`,colour=factor(switch)) + geom_jitter(height = 0.1)
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1)
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$`I(arsenic^2)`),x,x^2,mean(reda $educ),mean(reda$assoc) ) %*% coef(glm.fits))
}
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) stat_function(fun = predfun)
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$`I(arsenic^2)`),x,x^2,mean(reda $educ),mean(reda$assoc) ) %*% coef(glm.fits))
}
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
predfun(4)
predfun<- function(x){
invlogit (cbind (1,mean(reda$arsenic),mean(reda$`I(arsenic^2)`),x,x^2,mean(reda $educ),mean(reda$assoc) ) %*% coef(mo2))
}
ggplot(reda)+aes(x=lg_dis,y=switch,colour=factor(switch)) + geom_jitter(height = 0.1) + stat_function(fun = predfun)
predfun(0:10)
glm.prob = predict(mo2)
glm.prob = predict(mo2,type = 'response')
glm.prob = predict(mo2,type = 'response')
glm.pred=ifelse(glm.probs>0.5,"Yes","No")
glm.prob = predict(mo2,type = 'response')
glm.pred=ifelse(glm.prob>0.5,"Yes","No")
glm.prob = predict(mo2,type = 'response')
glm.pred=ifelse(glm.prob>0.5,"Yes","No")
table(glm.pred,dat$switch)
glm.prob = predict(mo2,type = 'response')
glm.pred=ifelse(glm.prob>0.5,"Yes","No")
table(glm.pred,dat$switch)
