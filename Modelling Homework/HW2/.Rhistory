pre = predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95)
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl, aes(y = value, x = index, color = type)) + geom_line()
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95)
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl, aes(y = value, x = index, color = type)) +xlab('')+ylab('')+ geom_line()
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95)
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl, aes(y = value, x = index, color = type)) +xlab('')+ylab('Mort')+ geom_line()
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) #+ geom_histogram(aes(x=abs()))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + geom_histogram(aes(x=abs(pre$fit-pollution$mort[31:60])))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = cbind(1:30,abs(pre$fit - pollution$mort[31:60]))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
View(aberr)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = cbind(1:30,abs(pre$fit - pollution$mort[31:60]))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolutely Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolutely Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolutely Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
View(aberr)
View(m)
View(mm)
View(mmm)
View(p1)
View(p2)
View(pl)
View(pre)
View(su)
View(pre)
View(pl)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
ggplot(data = aberr) + geom_bar(aes(y="Absolute Error", x = index))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
ggplot(data = aberr) + geom_col(aes(y="Absolute Error", x = index))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index))
gridExtra::grid.arrange(pp1,pp2,col=1)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index))
gridExtra::grid.arrange(pp1,pp2,col=2)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type))
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index))
gridExtra::grid.arrange(pp1,pp2,ncol=1)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index))
gridExtra::grid.arrange(pp1,pp2,ncol=1)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
gridExtra::grid.arrange(pp1,pp2,ncol=1)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')+
xlim("")
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
gridExtra::grid.arrange(pp1,pp2,ncol=1)
data(teengamb)
#?teengamb
#?teengamb
?teengamb
data(teengamb)
force(teengamb)
View(teengamb)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g4 = ggplot(teengamb) + geom_histogram(aes(y=gamble,x = status))
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = status))
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = sex))
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2, ylab("gamble"))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pacman::p_load("arm",
"data.table",
"Cairo",
"faraway",
"foreign",
"tidyverse",
"knitr",
'VIM',
"kableExtra")
opts_chunk$set(echo = F,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,
warning = FALSE, message=FALSE,dpi = 346)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
gelman_dir   <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
pollution    <- read.dta (paste0(gelman_dir,"pollution/pollution.dta"))
ggplot(data = pollution,aes(y = mort/100, x = nox)) + geom_point() + geom_smooth()
ggplot(data = pollution[which(pollution$nox<100),],aes(y = mort/100, x = nox)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
m = lm(data = pollution, mort~nox+I(nox^2)+I(nox^3))
summary(m)
ggplot() + geom_histogram(aes(x =m$residuals),bins = 18)
car::qqPlot(m$residuals)
par(mfrow=c(1,2))
curve(914.2+2.582*x-0.02468*x^2+0.00005048*x^3, from = 0,to = 60, n = 100,ylab = "Mort")
curve(2.582-0.04936*x+0.00015144*x**2, from = 0,to = 60, n = 100,ylab = "Derivative on Nox")
kable(confint(m,level = 0.99),align = 'c',caption = "Confident Interval of Coefficients",booktab = T,format = 'latex') %>% kable_styling(latex_options = "hold_position",bootstrap_options = c('striped','hover','condensed',"responsive"))
p1 = ggplot(data = pollution,aes(y = mort, x = so2)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
p2 = ggplot(data = pollution[which(pollution$hc<200),],aes(y = mort, x = hc)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
gridExtra::grid.arrange(p1,p2,ncol=1)
mm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution)
summary(mm)
car::qqPlot(mm$residuals)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
gridExtra::grid.arrange(pp1,pp2,ncol=1,width=c(1,1))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
gridExtra::grid.arrange(pp1,pp2,ncol=1,widths=c(1,1))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
gridExtra::grid.arrange(pp1,pp2,ncol=1,nrow=2,widths=c(1,1))
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
gridExtra::grid.arrange(pp1,pp2,ncol=1,nrow=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2, colnames("gamble"))
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("") + geom_smooth(method = 'lm',aes(colour=sex),se =F)
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("") + geom_smooth(method = 'lm',aes(size = sex),se =F)
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
gridExtra::grid.arrange(g1,g2,g3,g4,ncol=2)
library(gridExtra)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
g5 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(method = 'lm',aes(colour=sex),se =F) + theme(legend.position = 'top') + ylab("")
g6 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(method = 'lm',aes(colour=sex),se =F) + theme(legend.position = 'top') + ylab("")
g7 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(method = 'lm',aes(colour=sex),se =F) + theme(legend.position = 'top') + ylab("")
grid.arrange(arrangeGrob(g1,g2,g3,g4,ncol = 2),g5,g6,g7,ncol=1)
library(gridExtra)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
g5 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(method = 'lm',aes(colour=sex),se =F) + theme(legend.position = 'top') + ylab("")
g6 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(method = 'lm',aes(colour=sex),se =F) + theme(legend.position = 'top') + ylab("")
g7 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(method = 'lm',aes(colour=sex),se =F) + theme(legend.position = 'top') + ylab("")
grid.arrange(arrangeGrob(g1,g2,g3,g4,ncol = 2),g5,g6,g7,ncol=1)
library(gridExtra)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
g5 = ggplot(teengamb,aes(y=gamble,x = status,color = sex)) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g6 = ggplot(teengamb,aes(y=gamble,x = income,color = sex)) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g7 = ggplot(teengamb,aes(y=gamble,x = verbal,color = sex)) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
grid.arrange(arrangeGrob(g1,g2,g3,g4,ncol = 2),g5,g6,g7,ncol=1)
library(gridExtra)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
g5 = ggplot(teengamb,aes(y=gamble,x = status,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g6 = ggplot(teengamb,aes(y=gamble,x = income,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g7 = ggplot(teengamb,aes(y=gamble,x = verbal,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
grid.arrange(arrangeGrob(g1,g2,g3,g4,ncol = 2),g5,g6,g7,ncol=1)
library(gridExtra)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
g5 = ggplot(teengamb,aes(y=gamble,x = status,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g6 = ggplot(teengamb,aes(y=gamble,x = income,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g7 = ggplot(teengamb,aes(y=gamble,x = verbal,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
grid.arrange(arrangeGrob(g1,g2,g3,g4,ncol = 2),g5,g6,g7,ncol=1,heights = c(1,1,1,1))
library(gridExtra)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
g5 = ggplot(teengamb,aes(y=gamble,x = status,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g6 = ggplot(teengamb,aes(y=gamble,x = income,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g7 = ggplot(teengamb,aes(y=gamble,x = verbal,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
grid.arrange(arrangeGrob(g1,g2,g3,g4,ncol = 2),g5,g6,g7,ncol=1,heights = c(2,1,1,1))
library(gridExtra)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
grid.arrange(pp1,pp2,ncol=1,nrow=2,widths=c(1,1))
library(gridExtra)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
grid.arrange(pp1,pp2,ncol=1,nrow=2,widths=c(2,2))
library(gridExtra)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
grid.arrange(pp1,pp2,ncol=1,nrow=2,widths=c(2,1))
library(gridExtra)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
grid.arrange(pp1,pp2,ncol=1,nrow=2)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
g5 = ggplot(teengamb,aes(y=gamble,x = status,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g6 = ggplot(teengamb,aes(y=gamble,x = income,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g7 = ggplot(teengamb,aes(y=gamble,x = verbal,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
grid.arrange(arrangeGrob(g1,g2,g3,g4,ncol = 2),g5,g6,g7,ncol=1,heights = c(2.5,1,1,1))
lm(data = teengamb, gamble~status + I(status^2)+income+verbal+I(verbal^2)+I(verbal^3)+sex+sex:status+sex:income+sex:verbal)
pacman::p_load("arm",
"data.table",
"Cairo",
"faraway",
"foreign",
"tidyverse",
"knitr",
'VIM',
"kableExtra")
opts_chunk$set(echo = F,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,
warning = FALSE, message=FALSE,dpi = 346)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
gelman_dir   <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
pollution    <- read.dta (paste0(gelman_dir,"pollution/pollution.dta"))
ggplot(data = pollution,aes(y = mort/100, x = nox)) + geom_point() + geom_smooth()
ggplot(data = pollution[which(pollution$nox<100),],aes(y = mort/100, x = nox)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
m = lm(data = pollution, mort~nox+I(nox^2)+I(nox^3))
summary(m)
ggplot() + geom_histogram(aes(x =m$residuals),bins = 18)
car::qqPlot(m$residuals)
par(mfrow=c(1,2))
curve(914.2+2.582*x-0.02468*x^2+0.00005048*x^3, from = 0,to = 60, n = 100,ylab = "Mort")
curve(2.582-0.04936*x+0.00015144*x**2, from = 0,to = 60, n = 100,ylab = "Derivative on Nox")
kable(confint(m,level = 0.99),align = 'c',caption = "Confident Interval of Coefficients",booktab = T,format = 'latex') %>% kable_styling(latex_options = "hold_position",bootstrap_options = c('striped','hover','condensed',"responsive"))
p1 = ggplot(data = pollution,aes(y = mort, x = so2)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
p2 = ggplot(data = pollution[which(pollution$hc<200),],aes(y = mort, x = hc)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F)
gridExtra::grid.arrange(p1,p2,ncol=1)
mm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution)
summary(mm)
car::qqPlot(mm$residuals)
library(gridExtra)
mmm = lm(mort~nox+I(nox^3)+I(so2^(-1))+I(hc^2),data = pollution[1:30,])
pre = data.frame(predict(object = mmm, newdata = pollution[31:60,],interval = 'confidence', level = 0.95))
aberr = data.frame(cbind(1:30,abs(pre$fit - pollution$mort[31:60])))
pl = cbind(1:30,pre,pollution$mort[31:60])
colnames(pl)=c('index','predicted','lower level','upper level','real value')
colnames(aberr)=c('index','Absolute_Error')
pl = data.frame(pl)
pl = tidyr::gather(pl,'type','value',2:5)
pp1 = ggplot(data = pl) +xlab('')+ylab('Mort')+ geom_line(aes(y = value, x = index, color = type)) + theme(legend.position = 'top')
pp2 = ggplot(data = aberr) + geom_col(aes(y=Absolute_Error, x = index)) + xlab("")
grid.arrange(pp1,pp2,ncol=1,nrow=2)
data(teengamb)
g1 = ggplot(teengamb,aes(y=gamble,x = status)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top') + ylab("")
g2 = ggplot(teengamb,aes(y=gamble,x = income)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g3 = ggplot(teengamb,aes(y=gamble,x = verbal)) + geom_point() + geom_smooth(aes(colour="non-linear fit"),se =F) + geom_smooth(method = 'lm',aes(colour="linear fit"),se =F) +theme(legend.position = 'top')+ ylab("")
g4 = ggplot(teengamb) + geom_boxplot(aes(y=gamble,x = as.factor(sex)))+ ylab("")
g5 = ggplot(teengamb,aes(y=gamble,x = status,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g6 = ggplot(teengamb,aes(y=gamble,x = income,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
g7 = ggplot(teengamb,aes(y=gamble,x = verbal,color = as.factor(sex))) + geom_point() + geom_smooth(method = 'lm',se =F) + theme(legend.position = 'top') + ylab("")
grid.arrange(arrangeGrob(g1,g2,g3,g4,ncol = 2),g5,g6,g7,ncol=1,heights = c(2.5,1,1,1))
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+I(verbal^2)+I(verbal^3)+sex+sex:status+sex:income+sex:verbal)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+I(verbal^2)+I(verbal^3)+sex+sex:status+sex:income)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+I(verbal^3)+sex+sex:status+sex:income)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+I(verbal^3)+sex+sex:status+sex:income)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+I(verbal^2)+I(verbal^3)+sex+sex:status+sex:income)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+I(verbal^2)+sex+sex:status+sex:income)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+sex+sex:status+sex:income)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+sex+sex:status+sex:income+sex:verbal)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+I(verbal^2)+sex+sex:status+sex:income+sex:verbal)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+I(verbal^3)+sex+sex:status+sex:income+sex:verbal)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+I(verbal^3)+sex+sex:status+sex:income+sex:verbal)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+sex+sex:status+sex:income)
summary(sm)
sm = lm(data = teengamb, gamble~status + I(status^2)+income+verbal+sex:status+sex:income)
summary(sm)
