gelman_dir <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
heights    <- read.dta (paste0(gelman_dir,"earnings/heights.dta"))
kable(head(heights),longtable = T, caption = "First Five Row in data")
install.packages("funModeling")
pacman::p_load("arm","data.table","Cairo","faraway","foreign","tidyverse","knitr",'funModeling')
opts_chunk$set(echo = TRUE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
kable(summary(heights))
kable(head(heights),longtable = T, caption = "First Five Row in data")
kable(funModeling::summary(heights))
d1=data_integrity(heights)
kable(summary(d1))
kable(head(heights),longtable = T, caption = "First Five Row in data")
View(heights)
header(heights)
names(heights)
colnames(heights)=names(heights)
d1=data_integrity(heights)
kable(summary(d1))
kable(head(heights),longtable = T, caption = "First Five Row in data")
gelman_dir <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
heights    <- read.dta (paste0(gelman_dir,"earnings/heights.dta"),warn.missing.labels = T)
View(heights)
heights[1,1]
class(heights[1,1])
heights[1,1]==NA
heights[1,1]==na
heights[1,1]==Na
heights[1,1]==NULL
heights[1,1]
class(heights[1,1])
typeof(heights[1,1])
install.packages("VIM")
is.na(heights[,1])
pacman::p_load("arm","data.table","Cairo","faraway","foreign","tidyverse","knitr",'VIM')
opts_chunk$set(echo = TRUE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
info=NULL
for(i in length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(c(num_of_uniquevalue,na))
}
info=NULL
for(i in length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(c(num_of_uniquevalue,Na))
}
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
View(info)
llength(names(heights))
length(names(heights))
info=NULL
for(i in i:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(c(num_of_uniquevalue,Na))
}
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
View(info)
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(c(num_of_uniquevalue,Na))
}
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
View(info)
1:length(names(heights))
pacman::p_load("arm","data.table","Cairo","faraway","foreign","tidyverse","knitr",'VIM')
opts_chunk$set(echo = TRUE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
gelman_dir <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
heights    <- read.dta (paste0(gelman_dir,"earnings/heights.dta"),warn.missing.labels = T)
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(c(num_of_uniquevalue,Na))
}
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(matrix(c(num_of_uniquevalue,Na),ncol = 1))
}
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(matrix(c(num_of_uniquevalue,Na),ncol = 1))
}
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
View(info)
debugSource('D:/R-connect-Server/Modelling Homework/HW2/Debug_file.R')
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(info,matrix(c(num_of_uniquevalue,Na),ncol = 1))
}
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
View(info)
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(info,matrix(c(num_of_uniquevalue,Na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value')
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
View(info)
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(info,matrix(c(num_of_uniquevalue,Na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value')
colnames(info)=names(heights)
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
info = cbind(info,matrix(c(num_of_uniquevalue,Na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value')
colnames(info)=names(heights)
kable(info,caption = "Quality of Data")
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
P_na = Na/length(heights[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','% of Missing Value')
colnames(info)=names(heights)
kable(info,caption = "Quality of Data",longtable = TRUE,align = "c")
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
P_na = Na/length(heights[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','% of Missing Value')
colnames(info)=names(heights)
sum=rbind(ssummary(heights),info)
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
P_na = Na/length(heights[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','% of Missing Value')
colnames(info)=names(heights)
sum=rbind(summary(heights),info)
kable(sum,caption = "Quality of Data",longtable = TRUE,align = "c")
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
P_na = Na/length(heights[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','% of Missing Value')
colnames(info)=names(heights)
kable(info,caption = "Quality of Data",align = "c",format = 'latex',booktabs=T)
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
pacman::p_load("arm",
"data.table",
"Cairo",
"faraway",
"foreign",
"tidyverse",
"knitr",
'VIM',
"kableExtra")
opts_chunk$set(echo = TRUE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
P_na = Na/length(heights[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','% of Missing Value')
colnames(info)=names(heights)
kable(info,caption = "Quality of Data",align = "c",format = 'latex',booktabs=T)
aggr(heights,prop = T, numbers = T)
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
P_na = Na/length(heights[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','% of Missing Value')
colnames(info)=names(heights)
kable(info,caption = "Quality of Data",align = "c",format = 'latex',booktabs=T)
aggr(heights,prop = T)
# kable(summary(d1))
# kable(head(heights),longtable = T, caption = "First Five Row in data")
pacman::p_load("arm",
"data.table",
"Cairo",
"faraway",
"foreign",
"tidyverse",
"knitr",
'VIM',
"kableExtra")
opts_chunk$set(echo = TRUE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,
warning = FALSE, message=FALSE)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
heights = select(-heights[is.na(heights$earn)])
heights = select(-heights[is.na(heights$earn),])
View(heights)
heights[is.na(heights$earn)
,]
gelman_dir <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
heights    <- read.dta (paste0(gelman_dir,"earnings/heights.dta"),warn.missing.labels = T)
heights = select(-1*heights[is.na(heights$earn),])
heights = select(heights[-1*is.na(heights$earn),])
gelman_dir <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
heights    <- read.dta (paste0(gelman_dir,"earnings/heights.dta"),warn.missing.labels = T)
heights = select(heights[-1*is.na(heights$earn),])
gelman_dir <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
heights    <- read.dta (paste0(gelman_dir,"earnings/heights.dta"),warn.missing.labels = T)
hi = select(heights,-1*is.na(heights$earn))
View(hi)
hi = na.omit(heights)
View(hi)
pacman::p_load("arm",
"data.table",
"Cairo",
"faraway",
"foreign",
"tidyverse",
"knitr",
'VIM',
"kableExtra")
opts_chunk$set(echo = TRUE,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,
warning = FALSE, message=FALSE)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
gelman_dir <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
heights    <- read.dta (paste0(gelman_dir,"earnings/heights.dta"),warn.missing.labels = T)
View(heights)
heights[17,1]
heights[17,1]==0
sum(heights[,1]==0)
heights[,1]==0
sum(heights[,1]==0,na.rm =T)
pacman::p_load("arm",
"data.table",
"Cairo",
"faraway",
"foreign",
"tidyverse",
"knitr",
'VIM',
"kableExtra")
opts_chunk$set(echo = F,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,
warning = FALSE, message=FALSE)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
for(i in 1:length(names(hi))){
heights[which(heights[,i]==0),i]=NULL
}
a=NA
is.na(a)
for(i in 1:length(names(hi))){
heights[which(heights[,i]==0),i]=NaN
}
View(heights)
for(i in 1:length(names(hi))){
heights[which(heights[,i]==0),i]=NaN
}
hi = na.omit(heights)
info=NULL
for(i in 1:length(names(hi))){
num_of_uniquevalue=length(unique(hi[,i]))
Na = sum(is.na(hi[,i]))
Ze = sum(hi[,i]==0)
P_na = (Na+Ze)/length(hi[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Number of 0','% of Missing Value')
colnames(info)=names(hi)
kable(info,caption = "Quality of Data",align = "c",format = 'latex',booktabs=T,longtable = T)
matrixplot(hi)
hi[,'Earn V.S. Mean']=hi$earn-mean(hi$earn)
View(hi)
View(hi)
hi[,'h_over_m']=hi$height - mean(hi$height)
ggplot(hi,aes(y=earn,x = h_over_m)) +
geom_point()
mean(hi$height)
pacman::p_load("arm",
"data.table",
"Cairo",
"faraway",
"foreign",
"tidyverse",
"knitr",
'VIM',
"kableExtra")
opts_chunk$set(echo = F,dev="CairoPNG",fig.align = "center",
fig.width = 5.656, fig.height = 4, global.par = TRUE,
warning = FALSE, message=FALSE)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
gelman_dir <- "http://www.stat.columbia.edu/~gelman/arm/examples/"
heights    <- read.dta (paste0(gelman_dir,"earnings/heights.dta"),warn.missing.labels = T)
info=NULL
for(i in 1:length(names(heights))){
num_of_uniquevalue=length(unique(heights[,i]))
Na = sum(is.na(heights[,i]))
Ze = sum(heights[,i]==0,na.rm =T)
P_na = (Na+Ze)/length(heights[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Number of 0','% of Missing Value')
colnames(info)=names(heights)
kable(info,caption = "Quality of Data",align = "c",digits = 2,
format = 'latex',booktabs=T,longtable=T)
matrixplot(heights)
for(i in 1:length(names(heights))){
heights[which(heights[,i]==0),i]=NaN
}
hi = na.omit(heights)
info=NULL
for(i in 1:length(names(hi))){
num_of_uniquevalue=length(unique(hi[,i]))
Na = sum(is.na(hi[,i]))
Ze = sum(hi[,i]==0)
P_na = (Na+Ze)/length(hi[,i])
info = cbind(info,matrix(c(num_of_uniquevalue,Na,Ze,P_na),ncol = 1))
}
rownames(info)=c('Number of Unique Value','Number of Missing Value','Number of 0','% of Missing Value')
colnames(info)=names(hi)
kable(info,caption = "Quality of Data",digits = 2,
align = "c",format = 'latex',booktabs=T,longtable = T)
matrixplot(hi)
hi[,'h_over_m']=hi$height - mean(hi$height)
ggplot(hi,aes(y=earn,x = h_over_m)) +
geom_point()
hi[,'h_over_m']=hi$height - mean(hi$height)
ggplot(hi,aes(y=earn,x = h_over_m)) +
geom_point()
hi$height - mean(hi$height)
plot(hi$h_over_m)
hi[,'h_over_m']=hi$height - mean(hi$height)
ggplot(hi,aes(y=earn,x = h_over_m)) +
geom_point() + geom_smooth()
hi[,'h_over_m']=hi$height - mean(hi$height)
ggplot(hi,aes(y=earn,x = h_over_m)) +
geom_point() + geom_smooth()
hi[,'h_over_m']=hi$height - mean(hi$height)
ggplot(hi,aes(y=earn,x = h_over_m)) +
geom_point() + geom_smooth(se=F)
mo = lm(log(earn)~h_over_m,data = hi)
mo = lm(log(earn)~h_over_m,data = hi)
summary(mo)
ggplot(hi,aes(y=log(earn),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
ggplot(hi,aes(y=log(earn,10),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
ggplot(hi,aes(y=log(earn,5),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
ggplot(hi,aes(y=log(earn,3),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
ggplot(hi,aes(y=log(earn,15),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
p5=ggplot(hi,aes(y=log(earn,5),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p10=ggplot(hi,aes(y=log(earn,10),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
pl5=ggplot(hi,aes(y=log(earn,15),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p20=ggplot(hi,aes(y=log(earn,20),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
gridExtra::grid.arrange(p5,p10,p15,p20,ncol=2)
p5=ggplot(hi,aes(y=log(earn,5),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p10=ggplot(hi,aes(y=log(earn,10),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p15=ggplot(hi,aes(y=log(earn,15),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p20=ggplot(hi,aes(y=log(earn,20),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
gridExtra::grid.arrange(p5,p10,p15,p20,ncol=2)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
p5=ggplot(hi,aes(y=log(earn,5),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p10=ggplot(hi,aes(y=log(earn,20),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p15=ggplot(hi,aes(y=log(earn,40),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p20=ggplot(hi,aes(y=log(earn,60),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
gridExtra::grid.arrange(p5,p10,p15,p20,ncol=2)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
p5=ggplot(hi,aes(y=log(earn,2),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p10=ggplot(hi,aes(y=log(earn,4),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p15=ggplot(hi,aes(y=log(earn,8),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
p20=ggplot(hi,aes(y=log(earn,10),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
gridExtra::grid.arrange(p5,p10,p15,p20,ncol=2)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
pl20=ggplot(hi,aes(y=log(earn,10),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
ggplot(hi,aes(y=log(earn,10),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
pnl=ggplot(hi,aes(y=earn,x = h_over_m)) +
geom_point() + geom_smooth(se=F)
pl=ggplot(hi,aes(y=log(earn,10),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
gridExtra::grid.arrange(pnl,pl,ncol=2)
#mo = lm(log(earn)~h_over_m,data = hi)
#summary(mo)
pnl=ggplot(hi,aes(y=earn,x = h_over_m)) +
geom_point() + geom_smooth(se=F)
pl=ggplot(hi,aes(y=log(earn,10),x = h_over_m)) +
geom_point() + geom_smooth(se=F)
gridExtra::grid.arrange(pnl,pl,ncol=2)
mo = lm(log(earn,10)~log(h_over_m),data = hi)
mo = lm(log(earn,10)~log(h_over_m),data = hi)
summary(mo)
mo = lm(log(earn,10)~log(h_over_m),data = hi)
summary(mo)
ggplot()+geom_point(aes(y=mo$residuals,hi$h_over_m))
mo = lm(log(earn,10)~log(h_over_m),data = hi)
summary(mo)
ggplot()+geom_point(aes(y=mo$residuals,x=hi$h_over_m))
mo = lm(log(earn,10)~log(h_over_m),data = hi)
summary(mo)
ggplot()+geom_point(aes(y=mo$residuals,x=mo$fitted.values))
mo = lm(log(earn,10)~log(h_over_m),data = hi)
summary(mo)
ggplot()+geom_point(aes(y=mo$residuals,x=mo$fitted.values))
car::qqPlot(mo$residuals)
mo = lm(log(earn,10)~h_over_m,data = hi)
summary(mo)
ggplot()+geom_point(aes(y=mo$residuals,x=mo$fitted.values))
car::qqPlot(mo$residuals)
mo = lm(log(earn,10)~h_over_m+I(h_over_m^2),data = hi)
summary(mo)
ggplot()+geom_point(aes(y=mo$residuals,x=mo$fitted.values))
car::qqPlot(mo$residuals)
mo = lm(log(earn,10)~h_over_m+I(log(h_over_m,10)),data = hi)
summary(mo)
ggplot()+geom_point(aes(y=mo$residuals,x=mo$fitted.values))
car::qqPlot(mo$residuals)
mo = lm(log(earn,10)~h_over_m+I(h_over_m^3),data = hi)
summary(mo)
ggplot()+geom_point(aes(y=mo$residuals,x=mo$fitted.values))
car::qqPlot(mo$residuals)
mo = lm(log(earn,10)~h_over_m+I(exp(h_over_m)),data = hi)
summary(mo)
ggplot()+geom_point(aes(y=mo$residuals,x=mo$fitted.values))
car::qqPlot(mo$residuals)
