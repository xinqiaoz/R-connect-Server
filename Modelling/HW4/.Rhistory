knitr::opts_chunk$set(echo = FALSE,out.width="0.9\\linewidth",dev="pdf",fig.align  = 'center',warning = F, message = F)
pacman::p_load("ggplot2","knitr","faraway","arm","hett","data.table","foreign","car","VGAM","MASS","kableExtra")
knitr::opts_chunk$set(echo = FALSE,out.width="0.9\\linewidth",dev="pdf",fig.align  = 'center',warning = F, message = F)
pacman::p_load("ggplot2","knitr","faraway","arm","hett","data.table","foreign","car","VGAM","MASS","kableExtra")
risky_behaviors<-read.dta("http://www.stat.columbia.edu/~gelman/arm/examples/risky.behavior/risky_behaviors.dta")
View(risky_behaviors)
risky_behaviors<-read.dta("http://www.stat.columbia.edu/~gelman/arm/examples/risky.behavior/risky_behaviors.dta")
da = risky_behaviors
funModeling::data_integrity(da)
library()
library(foreign)
var.lab <- attr(da,"var.labels")
var.lab
mo1 = glm(da,bupactsd~couples+women_alone,family = ppoisson)
mo1 = glm(da,bupactsd~couples+women_alone,family = poisson)
mo1 = glm(data = da,bupactsd~couples+women_alone,family = poisson)
mo1 = glm(data = da,bupacts~couples+women_alone,family = poisson)
mo1 = glm(data = da,bupacts~couples+women_alone,family = poisson)
summary(mo1)
me = reshape2::melt(c(da$bupacts,mo1$fitted.values))
View(me)
ggplot() + geom_point(aes(y = mo1$residuals, x = mo1$fitted.values))
ggplot() + geom_point(aes(y = mo1$residuals, x = mo1$data$couples))
mo1 = glm(data = da,bupacts~couples+women_alone,family = poisson, offset = log(bupacts))
mo1 = glm(data = da,bupacts~couples+women_alone,family = poisson, offset = bupacts)
summary(mo1)
mo1 = glm(data = da,formula = bupacts~couples+women_alone,family = poisson)
summary(mo1)
yhat = predict(mo1,type = "response")
mo1 = glm(data = da,formula = fupacts~couples+women_alone,family = poisson)
summary(mo1)
ggplot() + geom_point(aes(y = mo1$residuals, x = mo1$data$couples))
z = (da$fupacts - yhat)/sqrt(yhat)
yhat = predict(mo1,type = "response")
z = (da$fupacts - yhat)/sqrt(yhat)
cat ("overdispersion ratio is ", sum(z^2)/(434-2), "\n")
cat ("p-value of overdispersion test is ", pchisq (sum(z^2), 434-2), "\n")
mo11 = glm(data = da,formula = fupacts~couples+women_alone+bupacts+bs_hiv+sex,family = poisson)
summary(mo11)
ggplot() + geom_point(aes(y = mo1$residuals, x = mo1$fitted.values))
ggplot() + geom_point(aes(y = mo11$residuals, x = mo11$fitted.values))
yhat = predict(mo11,type = "response")
z = (da$fupacts - yhat)/sqrt(yhat)
cat ("overdispersion ratio is ", sum(z^2)/(434-2), "\n")
cat ("p-value of overdispersion test is ", pchisq (sum(z^2), 434-2), "\n")
mo111 = glm(data = da,formula = fupacts~couples+women_alone+bupacts+bs_hiv+sex,family = quasipoisson)
summary(mo111)
da2 = read.table(   "http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat")
View(da2)
mol = glm(switch ~ arsenic + dist + educ,family=binomial(link="logit"), data = da2)
mop = glm(switch ~ arsenic + dist + educ,family=binomial(link="probit"), data = da2)
c(mol$coefficients,mop$coefficients)
cbind(mol$coefficients,mop$coefficients)
colnames(cof) = c("Logit","Probit")
cof = cbind(mol$coefficients,mop$coefficients)
colnames(cof) = c("Logit","Probit")
kable(cof)
cof = cbind(mol$coefficients,mop$coefficients,mop$coefficients*1.6)
colnames(cof) = c("Logit","Probit","Adj-Probit")
kable(cof,align = "c") %>% kable_styling(latex_options = "HOLD_position")
arsenic = exp(runif(10,-0.6733,2.2670))
dist = runif(10,0.387,339.531)
educ = sample(0:17,10,replace = T)
predict_data = data.frame(arsenic,dist,educ)
prel = predict(mol,predict_data)
prep = predict(mop,predict_data)
prel = predict(mol,predict_data)
prep = predict(mop,predict_data)
pre = cbind(prel,prep)
colnames(pre) = c("Logit","Probit")
kable(pre,align = "c") %>% kable_styling(latex_options = "HOLD_position")
da3<-read.dta("http://www.stat.columbia.edu/~gelman/arm/examples/lalonde/NSW.dw.obs.dta")
da3<-read.dta("http://www.stat.columbia.edu/~gelman/arm/examples/lalonde/NSW.dw.obs.dta")
attr(da3,which = "var.lables")
da3<-read.dta("http://www.stat.columbia.edu/~gelman/arm/examples/lalonde/NSW.dw.obs.dta")
attr(da3,which = "da3$var.lables")
da3<-read.dta("http://www.stat.columbia.edu/~gelman/arm/examples/lalonde/NSW.dw.obs.dta")
attr(da3,which = "var.labels")
View(da3)
da3$re74 = (da3$re74 - mean(da3$re74))/sd(da3$re74)
da3$re75 = (da3$re75 - mean(da3$re75))/sd(da3$re75)
mo2 = vglm(re78 ~ treat+age+educ+black+hisp+married+nodgree+re74+re75,family = tobit(Upper = 121174),data = da3)
mo2 = vglm(re78 ~ treat+age+educ+black+hisp+married+nodegree+re74+re75,family = tobit(Upper = 121174),data = da3)
summary(mo2)
View(da3)
da3$re78 = (da3$re78 - mean(da3$re78))/sd(da3$re78)
mo2 = vglm(re78 ~ treat+age+educ+black+hisp+married+nodegree+re74+re75,family = tobit(Upper = 121174),data = da3)
summary(mo2)
da4 <-read.csv("congress(1).csv",header=TRUE)
View(da4)
unique(da4$incumbent)
unique(da4$year)
da4 = da4[which(da4$year==c(1986,1988)),]
da4 = na.omit(da4)
da4$Dem_vote[which(da4$Dem_vote==0)]=NULL
da4$Dem_vote[which(da4$Dem_vote==0)]=NA
da4$Rep_vote[which(da4$Rep_vote==0)]=NA
da4 = na.omit(da4)
funModeling::data_integrity(da4)
mo3 = lm(data = da4, Dem_pct~x1+x2+incumbent)
summary(mo3)
da4 <-read.csv("congress(1).csv",header=TRUE)
da4 = da4[which(da4$year==c(1986,1988) & da4$contested == TRUE),]
da4$Dem_vote[which(da4$Dem_vote==0)]=NA
da4$Rep_vote[which(da4$Rep_vote==0)]=NA
da4 = na.omit(da4)
mo3 = lm(data = da4, Dem_pct~x1+x2+incumbent)
summary(mo3)
da4$Dem_vote/(da4$Dem_vote+da4$Rep_vote)-da4$Dem_pct
ggplot()+geom_point(aes(y = mo3$residuals,x = mo3$fitted.values))
ggplot()+geom_point(aes(y = mo3$residuals,x = mo3$fitted.values))
car::qqPlot(mo3$residuals,id=F)
plot(mo3)
ggplot()+geom_point(aes(y = mo3$residuals,x = mo3$fitted.values))
car::qqPlot(mo3$residuals,id=F)
mo33 = tlm(data = da4, Dem_pct~x1+x2+incumbent)
summary(mo33)
hist(mo3$residuals)
hist((mo3$residuals-mean(mo3$residuals))/sd(mo3$residuals))
hist((mo3$residuals-mean(mo3$residuals))/sd(mo3$residuals),breaks = 50)
View(da4)
da4$"win" = 0
da4$win[which(da4$Dem_pct>0.5)]=1
mo333 = glm(data = da4, win~x1+x2+incumbent,family = binomial)
summary(mo333)
mo3333 = glm(data = da4, win~x1+x2+incumbent,family = binomial(link = "robit"))
data(salmonella)
#?salmonella
force(salmonella)
View(salmonella)
#?salmonella
mo4 = glm(data = salmonella, colonies~dose, family = poisson)
summary(mo4)
ggplot() + geom_point(aes(y = mo4$residuals,x = mo4$fitted.values))
car::qqPlot(mo4$residuals)
car::qqPlot(mo4$residuals,id=F)
ggplot() + geom_point(aes(y = mo4$residuals,x = mo4$fitted.values))
car::qqPlot(mo4$residuals,id=F)
ggplot() + geom_point(aes(y = mo4$residuals,x = mo4$fitted.values))
car::qqPlot(mo4$residuals,id=F)
yhat = predict(mo4,type = "response")
z = (salmonella$colonies - yhat)/sqrt(yhat)
cat ("overdispersion ratio is ", sum(z^2)/(18-2), "\n")
cat ("p-value of overdispersion test is ", pchisq (sum(z^2), 18-2), "\n")
ggplot(salmonella)+geom_point(aes(y = colonies, x = dose))
ggplot(salmonella)+geom_point(aes(y = colonies, x = dose)) + geom_smooth()
ggplot(salmonella,aes(y = colonies, x = dose))+geom_point() + geom_smooth()
ggplot(salmonella,aes(y = colonies, x = dose))+geom_point() + geom_smooth(aes(color = "Smooth"))
ggplot(salmonella,aes(y = log(colonies), x = dose))+geom_point() + geom_smooth(aes(color = "Smooth"))
ggplot(salmonella)+geom_point(aes(y = log(colonies), x = dose))
ggplot(salmonella)+geom_point(aes(y = log(colonies), x = log(dose)))
ggplot(salmonella,aes(y = log(colonies), x = log(dose)))+geom_point()
ggplot(salmonella,aes(y = log(colonies), x = log(dose)))+geom_point()+geom_smooth()
ggplot(salmonella,aes(y = log(colonies), x = log(dose)))+geom_point()+geom_smooth(method = "glm")
ggplot(salmonella,aes(y = log(colonies), x = log(dose)))+geom_point()+geom_smooth(method = "glm")
ggplot(salmonella,aes(y = log(colonies), x = log(dose)))+geom_point()+geom_smooth(method = "glm")
ggplot(salmonella,aes(y = log(colonies), x = log(dose)))+geom_point()+geom_smooth(method = "lm")
ggplot(salmonella,aes(y = log(colonies), x = log(dose)))+geom_point()+geom_smooth(method = "lm")
ggplot(salmonella,aes(y = log(colonies), x = log(dose)))+geom_point()+geom_smooth(method = "lm")
ggplot(salmonella,aes(y = log(colonies), x = log(dose)))+geom_point()+geom_smooth()
mo44 = glm(data = salmonella, log(colonies)~log(dose), family = poisson)
sal = salmonella[-3,]
View(sal)
sal = salmonella[-c(1,2,3),]
sal = salmonella[-c(1,2,3),]
mo44 = glm(data = salmonella, log(colonies)~log(dose), family = poisson)
sal = salmonella[-c(1,2,3),]
mo44 = glm(data = sal, log(colonies)~log(dose), family = poisson)
summary(mo44)
ggplot() + geom_point(aes(y = mo44$residuals,x = log(mo44$data$dose)))
ggplot(aes(y = mo44$residuals,x = log(mo44$data$dose))) + geom_point() + geom_smooth()
ggplot() + geom_point(aes(y = mo44$residuals,x = log(mo44$data$dose))) + geom_smooth(aes(y = mo44$residuals,x = log(mo44$data$dose)))
ggplot() + geom_point(aes(y = mo44$residuals,x = log(mo44$fitted.values))) + geom_smooth(aes(y = mo44$residuals,x = log(mo44$data$dose)))
sal = salmonella[-c(1,2,3),]
mo44 = glm(data = sal, log(colonies)~log(dose), family = poisson)
summary(mo44)
ggplot() + geom_point(aes(y = mo44$residuals,x = log(mo44$fitted.values))) + geom_smooth(aes(y = mo44$residuals,x = log(mo44$data$dose)))
ggplot() + geom_point(aes(y = mo44$residuals,x = log(mo44$fitted.values))) + geom_smooth(aes(y = mo44$residuals,x = log(mo44$fitted.values)))
ggplot() + geom_point(aes(y = mo44$residuals,x = log(mo44$fitted.values))) + geom_smooth(aes(y = mo44$residuals,x = log(mo44$fitted.values)),method = "lm")
ggplot() + geom_point(aes(y = mo44$residuals,x = log(mo44$fitted.values))) + geom_smooth(aes(y = mo44$residuals,x = log(mo44$fitted.values)),method = "glm")
ggplot() + geom_point(aes(y = mo44$residuals,x = log(mo44$fitted.values))) + geom_smooth(aes(y = mo44$residuals,x = log(mo44$fitted.values)),method = "gam")
ggplot() + geom_point(aes(y = mo44$residuals,x = log(mo44$fitted.values))) + geom_smooth(aes(y = mo44$residuals,x = log(mo44$fitted.values)))
fi = function(x){
predict(mo44,x)
}
ggplot(data = sal) +geom_point(aes(y = colonies,x = dose)) + stat_function(fun = fi)
fi = function(x){
predict(mo44,x)
}
ggplot(data = sal,aes(y = colonies,x = dose)) +geom_point() + stat_function(fun = fi)
predict(mo44,1.2)
?predict
predict(mo44,data = 1.2)
predict(mo44,new_data = 1.2)
predict(mo44,newdata = 1.2)
mo44$coefficients
fi = function(x){
exp(mo44$coefficients[1]+mo44$coefficients[2]*x)
}
ggplot(data = sal,aes(y = colonies,x = dose)) +geom_point() + stat_function(fun = fi)
fi = function(x){
exp(mo44$coefficients[1]+mo44$coefficients[2]*x)
}
ggplot(data = sal,aes(y = colonies,x = dose)) +geom_point() #+ stat_function(fun = fi)
fi = function(x){
exp(exp(mo44$coefficients[1]+mo44$coefficients[2]*log(x)))
}
ggplot(data = sal,aes(y = colonies,x = dose)) +geom_point() + stat_function(fun = fi)
data(ships)
#?ships
force(ships)
View(ships)
?ships
da5 = dvisits
#?ships
da5 = ships
da5$service[which(da5$service==0)]=NA
View(da5)
da5 = na.omit(da5)
mo5 = glm(data = da5,incidents~offset(log(service))+factor(type)+factor(year)+factor(period),family = poisson)
summary(mo5)
mo5 = glm(data = da5,incidents~offset(log(service))+factor(type)+factor(year)+factor(period),family = poisson)
summary(mo5)
data(dvisits)
#?dvisits
da6 = dvisits
?dvisits
View(da6)
?ships
r exp(-6.40590)
exp(-6.40590)
mo6 <- glm(doctorco ~ sex + age + agesq + income + levyplus + freepoor + freerepa + illness + actdays + hscore + chcond1 + chcond2,family=poisson, data=da6) deviance(pdoc)
mo6 <- glm(doctorco ~ sex + age + agesq + income + levyplus + freepoor + freerepa + illness + actdays + hscore + chcond1 + chcond2,family=poisson, data=da6)
summary(mo6)
deviance(mo6)
mo6 <- glm(doctorco ~ sex + age + agesq + income + levyplus + freepoor + freerepa + illness + actdays + hscore + chcond1 + chcond2,family=poisson, data=da6)
summary(mo6)
cat("Deviance of this model is ",deviance(mo6))
mo6 <- glm(doctorco ~ sex + age + agesq + income + levyplus + freepoor + freerepa + illness + actdays + hscore + chcond1 + chcond2,family=poisson, data=da6)
summary(mo6)
cat("Deviance of this model is",deviance(mo6))
ggplot() + geom_point(aes(y = mo6$residuals, x = mo6$fitted.values))
ggplot() + geom_point(aes(x = mo6$residuals, y = mo6$fitted.values))
y
ggplot() + geom_point(aes(y = mo6$residuals, x = mo6$fitted.values))
ggplot() + geom_point(aes(y = mo6$residuals, x = predict(mo6,type = "responce")))
ggplot() + geom_point(aes(y = mo6$residuals, x = predict(mo6,type = "response")))
ggplot() + geom_point(aes(y = residuals(mo6,type = "response"), x = predict(mo6,type = "response")))
lamda=predict(pdoc,dvisits[5190,],type="response")
lamda=predict(mo6,dvisits[5190,],type="response")
dpois(0,lambda = )
dpois(0,lambda)
lamda=predict(mo6,dvisits[5190,],type="response")
dpois(0,lambda)
dpois(0,lamda)
mo66 = lm(doctorco ~ sex + age + agesq + income + levyplus + freepoor + freerepa + illness + actdays + hscore + chcond1 + chcond2,data=da6)
View(da6)
cbind(1,mean(da6$sex),mean(da6$agesq),mean(da6$income),mean(da6$levyplus),mean(da6$freepoor),mean(da6$illness),mean(da6$actdays),mean(da6$hscore),mean(da6$chcond1),mean(da6$chcond2)) %*% mo66$coefficients
cbind(1,mean(da6$sex),mean(da6$agesq),mean(da6$income),mean(da6$levyplus),mean(da6$freepoor),mean(da6$illness),mean(da6$actdays),mean(da6$hscore),mean(da6$chcond1),mean(da6$chcond2))
dim(cbind(1,mean(da6$sex),mean(da6$agesq),mean(da6$income),mean(da6$levyplus),mean(da6$freepoor),mean(da6$illness),mean(da6$actdays),mean(da6$hscore),mean(da6$chcond1),mean(da6$chcond2)))
dim(mo66$coefficients)
dim(matrix(mo66$coefficients,ncol = 1))
cbind(1,mean(da6$sex),mean(da6$age),mean(da6$agesq),mean(da6$income),mean(da6$levyplus),mean(da6$freepoor),mean(da6$freerepa),mean(da6$illness),mean(da6$actdays),mean(da6$hscore),mean(da6$chcond1),mean(da6$chcond2)) %*% matrix(mo66$coefficients,ncol = 1)
li = function(x){
cbind(1,mean(da6$sex),mean(da6$age),mean(da6$agesq),x,mean(da6$levyplus),mean(da6$freepoor),mean(da6$freerepa),mean(da6$illness),mean(da6$actdays),mean(da6$hscore),mean(da6$chcond1),mean(da6$chcond2)) %*% matrix(mo66$coefficients,ncol = 1)
}
li(5)
ggplot(aes(y = doctorco,x = income),data = da6) + geom_point()
ggplot(aes(y = doctorco,x = age),data = da6) + geom_point()
ggplot(aes(y = doctorco,x = income),data = da6) + geom_point()
ggplot(aes(y = doctorco,x = income),data = da6) + geom_point() + stat_function(fun = li)
summary(mo66)
li = function(x){
cbind(1,mean(da6$sex),x,mean(da6$agesq),mean(da6$income),mean(da6$levyplus),mean(da6$freepoor),mean(da6$freerepa),mean(da6$illness),mean(da6$actdays),mean(da6$hscore),mean(da6$chcond1),mean(da6$chcond2)) %*% matrix(mo66$coefficients,ncol = 1)
}
ggplot(aes(y = doctorco,x = age),data = da6) + geom_point() + stat_function(fun = li)
cbind(1,mean(da6$sex),mean(da6$age),mean(da6$agesq),mean(da6$income),mean(da6$levyplus),mean(da6$freepoor),mean(da6$freerepa),mean(da6$illness),x,mean(da6$hscore),mean(da6$chcond1),mean(da6$chcond2)) %*% matrix(mo66$coefficients,ncol = 1)
li = function(x){
cbind(1,mean(da6$sex),mean(da6$age),mean(da6$agesq),mean(da6$income),mean(da6$levyplus),mean(da6$freepoor),mean(da6$freerepa),mean(da6$illness),x,mean(da6$hscore),mean(da6$chcond1),mean(da6$chcond2)) %*% matrix(mo66$coefficients,ncol = 1)
}
ggplot(aes(y = doctorco,x = actdays),data = da6) + geom_point() + stat_function(fun = li)
pi = function(x){
xbeta = cbind(1,mean(da6$sex),mean(da6$age),mean(da6$agesq),mean(da6$income),mean(da6$levyplus),mean(da6$freepoor),mean(da6$freerepa),mean(da6$illness),x,mean(da6$hscore),mean(da6$chcond1),mean(da6$chcond2)) %*% matrix(mo66$coefficients,ncol = 1)
return(exp(xbeta))
}
pi(4)
stat_function
ggplot(aes(y = doctorco,x = actdays),data = da6) + geom_point() + stat_function(fun = li) + stat_function(fun = pi)
ggplot(aes(y = doctorco,x = actdays),data = da6) + geom_point() + stat_function(fun = li,aes(color = "Linear Fit")) + stat_function(fun = pi,aes(color = "Poisson Fit"))
